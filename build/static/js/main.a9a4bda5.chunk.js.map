{"version":3,"sources":["components/VetreriaBox.js","components/modelli/Virgo.js","components/modelli/Model002.js","components/Sphere.js","components/State.js","components/drawer.js","App.js","index.js","components/Materials.js"],"names":["THREE","require","VetreriaBox","_ref","x","y","z","material","x2","hinge","model","props","_objectWithoutProperties","_excluded","modelMap","virgo","component","Virgo","dimensions","doorPosition","fenix","Model002","_ref2","SelectedModel","modelProps","_jsx","_Fragment","children","_jsxs","Canvas","concurrent","pixelRatio","camera","position","fov","intensity","angle","penumbra","Suspense","fallback","_objectSpread","Environment","files","ContactShadows","Math","PI","opacity","width","height","blur","far","OrbitControls","minDistance","maxDistance","minAzimuthAngle","maxAzimuthAngle","maxPolarAngle","minPolarAngle","target","enableZoom","enablePan","global","_useState","useState","_useState2","_slicedToArray","isOpen","setIsOpen","doorRotation","useMemo","rotation","useSpring","config","mass","tension","friction","_dimensions","useTexture","doorWidth","doorPositionX","doorHeight","doorPositionY","_useGLTF","useGLTF","positionIfRight","nodes","materials","renderFloor","planes","i","push","Plane","args","receiveShadow","attach","color","roughness","metalness","LineDashedMaterial","linewidth","scale","dashSize","gapSize","materialProps","useControls","thickness","value","min","max","step","clearcoat","clearcoatRoughness","transmission","ior","envMapIntensity","attenuationTint","attenuationDistance","dispose","animated","group","Line","points","lineWidth","dashed","Html","style","fontWeight","fontSize","backgroundColor","borderRadius","padding","toFixed","Box","onClick","castShadow","Cylinder","GlassMaterial","floors","renderFloors","floorTexture","wallTexture","rain","piatto","map","roughnessMap","metalnessMap","showerbot","object","geometry","Sphere","ref","useRef","hovered","hover","_useState3","_useState4","clicked","click","onPointerOver","event","onPointerOut","Sfera","marginBottom","background","base","nome","GlassMaterial2","proxy","current","panelPos","drawerWidth","modelList","title","img","prezzoBase","openedMixin","theme","transition","transitions","create","easing","sharp","duration","enteringScreen","overflowX","closedMixin","_defineProperty","leavingScreen","concat","spacing","breakpoints","up","DrawerHeader","styled","display","alignItems","justifyContent","mixins","toolbar","AppBar","MuiAppBar","shouldForwardProp","prop","_ref3","open","zIndex","drawer","marginLeft","Drawer","MuiDrawer","_ref4","flexShrink","whiteSpace","boxSizing","Menu","useTheme","_React$useState","React","_React$useState2","setOpen","handleDrawerOpen","setPosition","valueLabelFormat","newval","Number","_useState5","_useState6","setBase","_useState7","_useState8","setNome","_useState9","_useState10","setHinge","_useState11","_useState12","modelMaterials","setModelMaterials","prezzo","roundToNearestTen","useEffect","_useState13","_useState14","inputXValue","setInputXValue","_useState15","_useState16","inputYValue","setInputYValue","updateValue","val","axis","parseInt","limits","cm","round","timeout","setTimeout","clearTimeout","_useState17","_useState18","setModel","_useState19","_useState20","setDoorPosition","sx","CssBaseline","Toolbar","IconButton","edge","marginRight","MenuIcon","margin","filter","borderRight","src","alt","loading","Typography","variant","noWrap","direction","Close","Divider","List","ListItemButton","minHeight","px","ListItemIcon","minWidth","mr","GradientIcon","ListItemText","primary","Fragment","Select","labelId","id","label","onChange","m","MenuItem","flexDirection","marginTop","clickedMaterial","textAlign","Chip","border","HeightIcon","secondary","Slider","e","defaultValue","valueLabelDisplay","TextField","type","InputLabelProps","shrink","InputProps","inputProps","transform","ListItem","AccountBalanceWalletSharpIcon","CalculateIcon","App","ReactDOM","render","document","getElementById","MeshPhysicalMaterial","Color","convertSRGBToLinear","transparent","reflectivity","refractionRatio","side","BackSide"],"mappings":"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","file":"static/js/main.a9a4bda5.chunk.js","sourcesContent":["const THREE = require(\"three\");\nglobal.THREE = THREE;\nimport React, { Suspense } from \"react\";\nimport { Canvas } from \"@react-three/fiber\";\nimport {\n  ContactShadows,\n  Environment,\n  useGLTF,\n  OrbitControls,\n} from \"@react-three/drei\";\n\nimport Virgo from \"./modelli/Virgo\";\nimport Model001 from \"./modelli/Model001\";\nimport Model002 from \"./modelli/Model002\";\n\nexport default function VetreriaBox({\n  x,\n  y,\n  z,\n  x2,\n  material,\n  hinge,\n  model,\n  ...props\n}) {\n  const modelMap = {\n    virgo: {\n      component: Virgo,\n      props: {\n        dimensions: [x, y, z],\n        material: material,\n        hinge: hinge,\n        doorPosition: props.doorPosition,\n      },\n    },\n    fenix: {\n      component: Model002,\n      props: { dimensions: [x, y, z], material: material, hinge: hinge },\n    },\n  };\n\n  const { component: SelectedModel, props: modelProps } =\n    modelMap[model] || modelMap[\"virgo\"];\n\n  return (\n    <>\n      <Canvas\n        concurrent\n        pixelRatio={[1, 1.5]}\n        camera={{ position: [1.5, 1.5, 6], fov: 30 }}\n      >\n        <ambientLight intensity={0.8} />\n        <spotLight\n          intensity={0.8}\n          angle={0.1}\n          penumbra={1}\n          position={[6, 25, 20]}\n        />\n        <Suspense fallback={null}>\n          <SelectedModel {...modelProps} />\n          <Environment files={\"brown_photostudio_02_1k.hdr\"} />\n          <ContactShadows\n            rotation-x={Math.PI / 2}\n            position={[0, -0.8, 0]}\n            opacity={0.25}\n            width={10}\n            height={10}\n            blur={2}\n            far={1}\n          />\n        </Suspense>\n        <OrbitControls\n          minDistance={0.5}\n          maxDistance={7}\n          minAzimuthAngle={0.1}\n          maxAzimuthAngle={Math.PI / 2 - 0.05}\n          maxPolarAngle={Math.PI / 2 - 0.05}\n          minPolarAngle={0.98}\n          target={[-0.5, 1.75, 0]}\n          enableZoom={true}\n          enablePan={true}\n        />\n      </Canvas>\n    </>\n  );\n}\n","import React, { useState, useMemo, useEffect, useRef } from \"react\";\nimport {\n  Box,\n  Cylinder,\n  Plane,\n  Line,\n  Html,\n  useTexture,\n  useGLTF,\n  TransformControls,\n} from \"@react-three/drei\";\nimport { useSpring, animated } from \"@react-spring/three\";\nimport { useFrame } from \"@react-three/fiber\";\nimport { GlassMaterial } from \"../../components/Materials\";\nimport { useControls } from \"leva\";\n\nconst Virgo = ({ dimensions, material, hinge, ...props }) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  function toggleDoor() {\n    setIsOpen(!isOpen);\n  }\n\n  let doorRotation = useMemo(() => (isOpen ? -Math.PI / 2.2 : 0), [isOpen]);\n\n  doorRotation =\n    props.doorPosition == \"left\" ? doorRotation : doorRotation * -1;\n\n  const springConfig = {\n    mass: 2,\n    tension: 270,\n    friction: 26,\n  };\n\n  const { rotation } = useSpring({\n    rotation: [0, doorRotation, 0],\n    config: springConfig,\n  });\n\n  const floorTexture = useTexture(\"./floor.jpg\");\n  const wallTexture = useTexture(\"./concrete_polished_matte_basecolor.png\");\n\n  const [width, height, depth] = dimensions;\n\n  const doorWidth = width ? width : 0.6;\n  const doorPositionX = (doorWidth - 0.6) / 2;\n\n  const doorHeight = height ? height : 2; //2 + height  //height ? height : 2;\n\n  const doorPositionY = doorHeight > 2 ? doorHeight / 2 : 1; //(doorHeight - 2) / 2  //doorHeight > 2 ? (doorHeight - 2) / 2 : 2;\n\n  const { nodes, materials } = useGLTF(\"./showerbot/untitled.gltf\");\n  //const mobile = useGLTF(\"./mobile/mobile.gltf\")\n  //const muroback = useGLTF(\"./muroback/muroback.gltf\")\n  //const wc = useGLTF(\"./water/water.gltf\")\n  const rain = useGLTF(\"./rain/water.gltf\");\n  const piatto = useGLTF(\"./piatto/piatto.gltf\");\n\n  const positionIfRight = props.doorPosition == \"left\" ? [0, 0, 0] : [-1, 0, 0];\n\n  //console.log(piatto)\n\n  function renderFloor(z) {\n    let planes = [];\n    for (let i = 0; i < 10; i++) {\n      planes.push(\n        <Plane\n          key={i}\n          args={[1, 1]}\n          position={[-2 + i, 0, z]}\n          rotation={[-Math.PI / 2, 0, 0]}\n          receiveShadow\n        >\n          <meshStandardMaterial\n            attach=\"material\"\n            color=\"#a1a1a1\"\n            roughness={0.4}\n            metalness={0.6}\n          />\n        </Plane>\n      );\n    }\n\n    return planes;\n  }\n\n  function renderFloors() {\n    let floors = [];\n    for (let i = 0; i < 10; i++) {\n      floors.push(renderFloor(-1.6 + i));\n    }\n\n    return floors;\n  }\n\n  const dashMaterial = new THREE.LineDashedMaterial({\n    color: 0xffffff,\n    linewidth: 1,\n    scale: 1,\n    dashSize: 3,\n    gapSize: 1,\n  });\n\n  const materialProps = useControls({\n    thickness: { value: 5, min: 0, max: 20 },\n    roughness: { value: 0, min: 0, max: 1, step: 0.1 },\n    clearcoat: { value: 1, min: 0, max: 1, step: 0.1 },\n    clearcoatRoughness: { value: 0, min: 0, max: 1, step: 0.1 },\n    transmission: { value: 1, min: 0.9, max: 1, step: 0.01 },\n    ior: { value: 1.25, min: 1, max: 2.3, step: 0.05 },\n    envMapIntensity: { value: 25, min: 0, max: 100, step: 1 },\n    color: \"#ffffff\",\n    attenuationTint: \"#ffe79e\",\n    attenuationDistance: { value: 0, min: 0, max: 1 },\n    opacity: { value: 0.22, min: 0, max: 1 },\n  });\n\n  return (\n    <group dispose={null}>\n      {/* muro */}\n      {/* {muroback.nodes.muroback.children.map(function(object, i){\n  return <mesh key={i} position={[-2, 0.1, -2]} scale={[1,1.8,1]} geometry={object.geometry} material={object.material}  />\n})}\n{muroback.nodes.muroback.children.map(function(object, i){\n  return <mesh key={i} position={[-0.45, 0.1, -2]} scale={[1,1.8,1]} geometry={object.geometry} material={object.material}  />\n})}\n{muroback.nodes.muroback.children.map(function(object, i){\n  return <mesh key={i} position={[1.1, 0.1, -2]} scale={[1,1.8,1]} geometry={object.geometry} material={object.material}  />\n})}\n{muroback.nodes.muroback.children.map(function(object, i){\n  return <mesh key={i} position={[-2, 0.1, 0]} rotation={[0,Math.PI / 2,0]} scale={[1.3,1.8,1]} geometry={object.geometry} material={object.material}  />\n})} */}\n      {/* mobile */}\n      {/* {mobile.nodes.Material2020.children.map(function(object, i){\n  return <mesh key={i} position={[-1.6, .6, 2]} scale={[.7,.7,.7]} geometry={object.geometry} material={object.material}  />\n})} */}\n      {/* doccia */}\n      {/* {nodes.showerbot.children.map(function (object, i) {\n        return (\n          <mesh\n            key={i}\n            position={[-1.94, 1.2, -1.55]}\n            scale={[0.7, 0.7, 0.7]}\n            geometry={object.geometry}\n            material={object.material}\n          />\n        );\n      })}\n      {rain.nodes.rain.children.map(function (object, i) {\n        return (\n          <mesh\n            key={i}\n            rotation={[0, Math.PI / 2, 0]}\n            position={[-1.6, 2, -1.55]}\n            scale={[2.5, 2.5, 2.5]}\n            geometry={object.geometry}\n            material={object.material}\n          />\n        );\n      })} */}\n\n      {/* {piatto.nodes.piatto.children.map(function (object, i) {\n        return (\n          <mesh\n            position={[doorWidth - 5.4 / 2, 0, -1.4]}\n            scale={[1.5, 1, 1.1]}\n            key={i}\n            geometry={object.geometry}\n          >\n            <meshStandardMaterial\n              attach=\"material\"\n              color=\"#c1c1c1\"\n              roughness={0.5}\n              metalness={0.4}\n            />\n          </mesh>\n        );\n        //-1.9 + (width / 2)\n      })} */}\n\n      {/* water */}\n      {/* {wc.nodes.water.children.map(function(object, i){\n  return <mesh key={i} position={[doorWidth - 2 / 2, 0.26, -1.9]}  scale={[1,1,1]} geometry={object.geometry} material={object.material}  />\n})} */}\n\n      {/* door */}\n      <group\n        rotation={\n          props.doorPosition == \"left\" ? [0, 0, 0] : [0, -Math.PI / 2, 0]\n        }\n        position={positionIfRight}\n      >\n        <animated.group position={[-1.94, 0.03, -1.4]} rotation={rotation}>\n          <group position={[0.3, 0, 0]}>\n            <group>\n              <Line\n                points={[\n                  [0, 0, 0],\n                  [doorWidth, 0, 0],\n                ]}\n                position={[\n                  doorPositionX - doorWidth / 2,\n                  doorPositionY * 2.08,\n                  0,\n                ]}\n                color={\"white\"}\n                lineWidth={0.7}\n                dashed={true}\n                scale={1}\n                dashSize={0.03}\n                gapSize={0.02}\n              />\n              <mesh position={[doorWidth - 0.3, doorPositionY * 2.08, 0]}>\n                <sphereGeometry attach=\"geometry\" args={[0.02, 32, 32]} />\n              </mesh>\n              <mesh position={[-0.3, doorPositionY * 2.08, 0]}>\n                <sphereGeometry attach=\"geometry\" args={[0.02, 32, 32]} />\n              </mesh>\n              <Html position={[doorPositionX - 0.1, doorPositionY * 2.2, 0]}>\n                <div\n                  style={{\n                    color: \"#fff\",\n                    fontWeight: \"bold\",\n                    fontSize: \"12px\",\n                    backgroundColor: \"#000\",\n                    borderRadius: \"3px\",\n                    padding: \"2px 5px\",\n                  }}\n                >\n                  {(doorWidth * 100).toFixed(0)}CM\n                </div>\n              </Html>\n              <Line\n                points={[\n                  [0, 0, 0],\n                  [0, doorHeight, 0],\n                ]}\n                position={[doorWidth - 0.15, 0, 0]}\n                color={\"white\"}\n                lineWidth={0.5}\n                dashed={true}\n                scale={1}\n                dashSize={0.03}\n                gapSize={0.02}\n              />\n              <mesh position={[doorWidth - 0.15, doorPositionY * 2, 0]}>\n                <sphereGeometry attach=\"geometry\" args={[0.02, 32, 32]} />\n              </mesh>\n              <mesh position={[doorWidth - 0.15, 0, 0]}>\n                <sphereGeometry attach=\"geometry\" args={[0.02, 32, 32]} />\n              </mesh>\n              <Html position={[doorWidth - 0.12, doorHeight / 2, 0]}>\n                <div\n                  style={{\n                    color: \"#fff\",\n                    fontWeight: \"bold\",\n                    fontSize: \"12px\",\n                    backgroundColor: \"#000\",\n                    borderRadius: \"3px\",\n                    padding: \"2px 5px\",\n                  }}\n                >\n                  {(doorHeight * 100).toFixed(0)}CM\n                </div>\n              </Html>\n            </group>\n            {/* Glass Door */}\n            <Box\n              args={[doorWidth, doorHeight, 0.008]}\n              position={[doorPositionX, doorPositionY, 0]}\n              onClick={toggleDoor}\n              receiveShadow\n              castShadow\n            >\n              <meshPhysicalMaterial {...materialProps} />\n            </Box>\n\n            {/* Pomello */}\n            <Cylinder\n              args={[0.015, 0.015, 0.04, 32]}\n              rotation={[Math.PI / 2, 0, 0]}\n              position={[doorWidth - 0.8 / 2, 1, 0.005]}\n            >\n              <meshStandardMaterial\n                attach=\"material\"\n                color=\"#ffffff\"\n                metalness={1}\n                roughness={0}\n              />\n            </Cylinder>\n\n            {/* Hinges */}\n            <Box\n              args={[0.08, 0.08, 0.03]}\n              position={[-0.28, doorHeight - 0.16, 0.005]}\n              receiveShadow\n              castShadow\n            >\n              <meshStandardMaterial\n                attach=\"material\"\n                color=\"#ffffff\"\n                metalness={1}\n                roughness={0}\n              />\n            </Box>\n            {/* Middle Hinge */}\n            {hinge && (\n              <Box\n                args={[0.08, 0.08, 0.03]}\n                position={[-0.28, doorHeight - doorHeight / 2 - 0.04, 0.005]}\n                receiveShadow\n                castShadow\n              >\n                <meshStandardMaterial\n                  attach=\"material\"\n                  color=\"#ffffff\"\n                  metalness={1}\n                  roughness={0}\n                />\n              </Box>\n            )}\n\n            <Box\n              args={[0.08, 0.08, 0.03]}\n              position={[-0.28, 0.2, 0.005]}\n              receiveShadow\n              castShadow\n            >\n              <meshStandardMaterial\n                attach=\"material\"\n                color=\"#ffffff\"\n                metalness={1}\n                roughness={0}\n              />\n            </Box>\n          </group>\n        </animated.group>\n      </group>\n\n      {/* vetro laterale */}\n      <Box\n        args={[0.008, doorHeight + 0.1, 0.8]}\n        position={[doorWidth - 3.8 / 2, doorPositionY, -1.8]}\n        material={material ? material : GlassMaterial}\n        receiveShadow\n        castShadow\n      />\n\n      {/* collone right */}\n      {/* <Box\n        position={[doorWidth - 3.8 / 2, doorPositionY, -1.5]}\n        args={[0.1, doorHeight + 0.1, 1.2]}\n      >\n        <meshStandardMaterial\n          attach=\"material\"\n          color=\"#c1c1c1\"\n          roughness={0.5}\n          metalness={0.4}\n        />\n      </Box> */}\n\n      {/* collone left */}\n      {/* <Box position={[-1.9, doorPositionY, -1]} args={[0.2, doorHeight + 0.1, 0.1]} material={muroback.nodes.muroback.children[0].material}>\n\n      </Box> */}\n\n      {/* left wall */}\n      <Plane\n        position={[-2, 1, 0]}\n        args={[16, 16]}\n        rotation={[0, Math.PI / 2, 0]}\n        receiveShadow\n      >\n        <meshStandardMaterial\n          attach=\"material\"\n          color=\"#c1c1c1\"\n          roughness={0.5}\n          metalness={0.4}\n        />\n      </Plane>\n\n      {/* Right wall */}\n      <Plane\n        position={[0, 1, -2]}\n        args={[16, 16]}\n        rotation={[0, 0, -Math.PI / 2]}\n        receiveShadow\n      >\n        <meshStandardMaterial\n          attach=\"material\"\n          color=\"#c1c1c1\"\n          roughness={0.4}\n          metalness={0.6}\n        />\n      </Plane>\n\n      {/* Floor Plane */}\n      {renderFloors()}\n    </group>\n  );\n};\n\nexport default Virgo;\n","import React, { useState, useMemo, useEffect, useRef } from \"react\";\nimport {\n  Box,\n  Cylinder,\n  Plane,\n  Line,\n  Html,\n  useTexture,\n  useGLTF,\n  TransformControls,\n} from \"@react-three/drei\";\nimport { useSpring, animated } from \"@react-spring/three\";\nimport { useFrame } from \"@react-three/fiber\";\nimport { GlassMaterial } from \"../Materials\";\n\nconst Model002 = ({ dimensions, material, hinge }) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  function toggleDoor() {\n    setIsOpen(!isOpen);\n  }\n\n  const doorRotation = useMemo(() => (isOpen ? -Math.PI / 2.2 : 0), [isOpen]);\n\n  const springConfig = {\n    mass: 2,\n    tension: 270,\n    friction: 26,\n  };\n\n  const { rotation } = useSpring({\n    rotation: [0, doorRotation, 0],\n    config: springConfig,\n  });\n\n  const floorTexture = useTexture(\"./floor.jpg\");\n  const wallTexture = useTexture(\"./concrete_polished_matte_basecolor.png\");\n\n  const [width, height, depth] = dimensions;\n\n  const doorWidth = width ? width : 0.6;\n  const doorPositionX = (doorWidth - 0.6) / 2;\n\n  const doorHeight = height ? height : 2; //2 + height  //height ? height : 2;\n\n  const doorPositionY = doorHeight > 2 ? doorHeight / 2 : 1; //(doorHeight - 2) / 2  //doorHeight > 2 ? (doorHeight - 2) / 2 : 2;\n\n  const { nodes, materials } = useGLTF(\"./showerbot/untitled.gltf\");\n  //const mobile = useGLTF(\"./mobile/mobile.gltf\")\n  //const muroback = useGLTF(\"./muroback/muroback.gltf\")\n  //const wc = useGLTF(\"./water/water.gltf\")\n  const rain = useGLTF(\"./rain/water.gltf\");\n  const piatto = useGLTF(\"./piatto/piatto.gltf\");\n\n  //console.log(piatto)\n\n  function renderFloor(z) {\n    let planes = [];\n    for (let i = 0; i < 10; i++) {\n      planes.push(\n        <Plane\n          key={i}\n          args={[1, 1]}\n          position={[-2 + i, 0, z]}\n          rotation={[-Math.PI / 2, 0, 0]}\n          receiveShadow\n        >\n          <meshStandardMaterial\n            attach=\"material\"\n            color=\"#fff\"\n            map={floorTexture}\n            roughnessMap={wallTexture}\n            metalnessMap={wallTexture}\n            roughness={0.4}\n            metalness={0.6}\n          />\n        </Plane>\n      );\n    }\n\n    return planes;\n  }\n\n  function renderFloors() {\n    let floors = [];\n    for (let i = 0; i < 10; i++) {\n      floors.push(renderFloor(-1.6 + i));\n    }\n\n    return floors;\n  }\n\n  const dashMaterial = new THREE.LineDashedMaterial({\n    color: 0xffffff,\n    linewidth: 1,\n    scale: 1,\n    dashSize: 3,\n    gapSize: 1,\n  });\n\n  return (\n    <group dispose={null}>\n      {/* muro */}\n      {/* {muroback.nodes.muroback.children.map(function(object, i){\n  return <mesh key={i} position={[-2, 0.1, -2]} scale={[1,1.8,1]} geometry={object.geometry} material={object.material}  />\n})}\n{muroback.nodes.muroback.children.map(function(object, i){\n  return <mesh key={i} position={[-0.45, 0.1, -2]} scale={[1,1.8,1]} geometry={object.geometry} material={object.material}  />\n})}\n{muroback.nodes.muroback.children.map(function(object, i){\n  return <mesh key={i} position={[1.1, 0.1, -2]} scale={[1,1.8,1]} geometry={object.geometry} material={object.material}  />\n})}\n{muroback.nodes.muroback.children.map(function(object, i){\n  return <mesh key={i} position={[-2, 0.1, 0]} rotation={[0,Math.PI / 2,0]} scale={[1.3,1.8,1]} geometry={object.geometry} material={object.material}  />\n})} */}\n      {/* mobile */}\n      {/* {mobile.nodes.Material2020.children.map(function(object, i){\n  return <mesh key={i} position={[-1.6, .6, 2]} scale={[.7,.7,.7]} geometry={object.geometry} material={object.material}  />\n})} */}\n      {/* doccia */}\n      {nodes.showerbot.children.map(function (object, i) {\n        return (\n          <mesh\n            key={i}\n            position={[-1.94, 1.2, -1.55]}\n            scale={[0.7, 0.7, 0.7]}\n            geometry={object.geometry}\n            material={object.material}\n          />\n        );\n      })}\n      {rain.nodes.rain.children.map(function (object, i) {\n        return (\n          <mesh\n            key={i}\n            rotation={[0, Math.PI / 2, 0]}\n            position={[-1.6, 2, -1.55]}\n            scale={[2.5, 2.5, 2.5]}\n            geometry={object.geometry}\n            material={object.material}\n          />\n        );\n      })}\n\n      {piatto.nodes.piatto.children.map(function (object, i) {\n        return (\n          <mesh\n            position={[doorWidth - 5.4 / 2, 0, -1.4]}\n            scale={[1.5, 1, 1.1]}\n            key={i}\n            geometry={object.geometry}\n            material={object.material}\n          />\n        );\n        //-1.9 + (width / 2)\n      })}\n\n      {/* water */}\n      {/* {wc.nodes.water.children.map(function(object, i){\n  return <mesh key={i} position={[doorWidth - 2 / 2, 0.26, -1.9]}  scale={[1,1,1]} geometry={object.geometry} material={object.material}  />\n})} */}\n\n      <animated.group position={[-1.94, 0.03, -0.97]} rotation={rotation}>\n        <group position={[0.3, 0, 0]}>\n          <group>\n            <Line\n              points={[\n                [0, 0, 0],\n                [doorWidth, 0, 0],\n              ]}\n              position={[\n                doorPositionX - doorWidth / 2,\n                doorPositionY * 2.08,\n                0,\n              ]}\n              color={\"white\"}\n              lineWidth={0.7}\n              dashed={true}\n              scale={1}\n              dashSize={0.03}\n              gapSize={0.02}\n            />\n            <mesh position={[doorWidth - 0.3, doorPositionY * 2.08, 0]}>\n              <sphereGeometry attach=\"geometry\" args={[0.02, 32, 32]} />\n            </mesh>\n            <mesh position={[-0.3, doorPositionY * 2.08, 0]}>\n              <sphereGeometry attach=\"geometry\" args={[0.02, 32, 32]} />\n            </mesh>\n            <Html position={[doorPositionX - 0.1, doorPositionY * 2.2, 0]}>\n              <div\n                style={{\n                  color: \"#fff\",\n                  fontWeight: \"bold\",\n                  fontSize: \"12px\",\n                  backgroundColor: \"#000\",\n                  borderRadius: \"3px\",\n                  padding: \"2px 5px\",\n                }}\n              >\n                {(doorWidth * 100).toFixed(0)}CM\n              </div>\n            </Html>\n            <Line\n              points={[\n                [0, 0, 0],\n                [0, doorHeight, 0],\n              ]}\n              position={[doorWidth - 0.15, 0, 0]}\n              color={\"white\"}\n              lineWidth={0.5}\n              dashed={true}\n              scale={1}\n              dashSize={0.03}\n              gapSize={0.02}\n            />\n            <mesh position={[doorWidth - 0.15, doorPositionY * 2, 0]}>\n              <sphereGeometry attach=\"geometry\" args={[0.02, 32, 32]} />\n            </mesh>\n            <mesh position={[doorWidth - 0.15, 0, 0]}>\n              <sphereGeometry attach=\"geometry\" args={[0.02, 32, 32]} />\n            </mesh>\n            <Html position={[doorWidth - 0.12, doorHeight / 2, 0]}>\n              <div\n                style={{\n                  color: \"#fff\",\n                  fontWeight: \"bold\",\n                  fontSize: \"12px\",\n                  backgroundColor: \"#000\",\n                  borderRadius: \"3px\",\n                  padding: \"2px 5px\",\n                }}\n              >\n                {(doorHeight * 100).toFixed(0)}CM\n              </div>\n            </Html>\n          </group>\n          {/* Glass Door */}\n          <Box\n            args={[doorWidth, doorHeight, 0.008]}\n            position={[doorPositionX, doorPositionY, 0]}\n            material={material ? material : GlassMaterial}\n            onClick={toggleDoor}\n            receiveShadow\n            castShadow\n          />\n\n          {/* Pomello */}\n          <Cylinder\n            args={[0.015, 0.015, 0.04, 32]}\n            rotation={[Math.PI / 2, 0, 0]}\n            position={[doorWidth - 0.8 / 2, 1, 0.005]}\n          >\n            <meshStandardMaterial\n              attach=\"material\"\n              color=\"#ffffff\"\n              metalness={1}\n              roughness={0}\n            />\n          </Cylinder>\n\n          {/* Hinges */}\n          <Box\n            args={[0.08, 0.08, 0.03]}\n            position={[-0.28, doorHeight - 0.16, 0.005]}\n            receiveShadow\n            castShadow\n          >\n            <meshStandardMaterial\n              attach=\"material\"\n              color=\"#ffffff\"\n              metalness={1}\n              roughness={0}\n            />\n          </Box>\n          {/* Middle Hinge */}\n          {hinge && (\n            <Box\n              args={[0.08, 0.08, 0.03]}\n              position={[-0.28, doorHeight - doorHeight / 2 - 0.04, 0.005]}\n              receiveShadow\n              castShadow\n            >\n              <meshStandardMaterial\n                attach=\"material\"\n                color=\"#ffffff\"\n                metalness={1}\n                roughness={0}\n              />\n            </Box>\n          )}\n\n          <Box\n            args={[0.08, 0.08, 0.03]}\n            position={[-0.28, 0.2, 0.005]}\n            receiveShadow\n            castShadow\n          >\n            <meshStandardMaterial\n              attach=\"material\"\n              color=\"#ffffff\"\n              metalness={1}\n              roughness={0}\n            />\n          </Box>\n        </group>\n      </animated.group>\n\n      {/* collone right */}\n      {/* <Box\n        position={[doorWidth - 3.8 / 2, doorPositionY, -1.5]}\n        args={[0.1, doorHeight + 0.1, 1.2]}\n        material={piatto.nodes.piatto.children[0].material}\n      ></Box> */}\n\n      {/* collone left */}\n      {/* <Box position={[-1.9, doorPositionY, -1]} args={[0.2, doorHeight + 0.1, 0.1]} material={muroback.nodes.muroback.children[0].material}>\n\n      </Box> */}\n\n      {/* left wall */}\n      <Plane\n        position={[-2, 1, 0]}\n        args={[16, 16]}\n        rotation={[0, Math.PI / 2, 0]}\n        receiveShadow\n      >\n        <meshStandardMaterial\n          attach=\"material\"\n          color=\"#fff\"\n          map={wallTexture}\n          roughness={0.5}\n          metalness={0.4}\n        />\n      </Plane>\n\n      {/* Right wall */}\n      <Plane\n        position={[0, 1, -2]}\n        args={[16, 16]}\n        rotation={[0, 0, -Math.PI / 2]}\n        receiveShadow\n      >\n        <meshStandardMaterial\n          attach=\"material\"\n          color=\"#fff\"\n          map={wallTexture}\n          roughness={0.4}\n          metalness={0.6}\n        />\n      </Plane>\n\n      {/* Floor Plane */}\n      {renderFloors()}\n    </group>\n  );\n};\n\nexport default Model002;\n","const THREE = require(\"three\");\nglobal.THREE = THREE;\nimport React, { Suspense, useRef, useState, useEffect } from \"react\"\nimport { Canvas } from '@react-three/fiber'\nimport { Environment } from '@react-three/drei'\nimport {GlassMaterial, GlassMaterial2, GlassMaterial3, GlassMaterial4} from './Materials'\n\nfunction Sphere(props) {\n    const ref = useRef()\n  // Hold state for hovered and clicked events\n  const [hovered, hover] = useState(false)\n  const [clicked, click] = useState(false)\n  // Subscribe this component to the render-loop, rotate the mesh every frame\n  // Return the view, these are regular Threejs elements expressed in JSX\n\n  const handleClick = () => {\n    props.onClick(props);\n    click(!clicked);\n  };\n\n  return (\n    <mesh\n      {...props}\n      ref={ref}\n      scale={hovered ? 1.6 : 1.4}\n      onClick={handleClick}\n      onPointerOver={(event) => hover(true)}\n      onPointerOut={(event) => hover(false)}\n      >\n      <sphereGeometry args={[.5, 64]} />\n    </mesh>\n  )\n  }\n\nexport function Sfera({onClick}) {\n    return (\n      <>\n      <Canvas style={{height:\"80px\", marginBottom:\"15px\", background:\"#eee\"}} pixelRatio={[1, 1.5]} concurrent camera={{ fov: 30 }}>\n      <Suspense fallback={null}>\n        <ambientLight intensity={0.5} />\n        <spotLight position={[10, 10, 10]} angle={0.15} penumbra={1} />\n        <pointLight position={[-10, -10, -10]} />\n        <Sphere onClick={onClick} base=\"679\" nome=\"linea azzurra\" material={GlassMaterial} position={[-1, 0, 0]} />\n        <Sphere onClick={onClick} base=\"740\" nome=\"linea extra chiaro\" material={GlassMaterial2} position={[1, 0, 0]} />\n        <Environment files={'brown_photostudio_02_1k.hdr'} />\n        </Suspense>\n     </Canvas>\n      </>\n    )\n  }","\nimport { proxy, useProxy } from \"valtio\"\n\nexport const State = proxy({\n    current: null,\n    props: {\n      transmission: .5,\n      roughness: 0.5,\n    },\n    scale: {\n      x: 100,\n      y: 100,\n      z: 100\n    },\n    panelPos: {\n        x: 1.35\n    }\n  })","import React, { Suspense, useRef, useState, useEffect } from \"react\";\nimport VetreriaBox from \"./VetreriaBox.js\";\nimport { styled, useTheme } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport MuiDrawer from \"@mui/material/Drawer\";\nimport MuiAppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport List from \"@mui/material/List\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Typography from \"@mui/material/Typography\";\nimport Divider from \"@mui/material/Divider\";\nimport IconButton from \"@mui/material/IconButton\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport GradientIcon from \"@mui/icons-material/Gradient\";\nimport { Sfera } from \"./Sphere\";\nimport { Close } from \"@mui/icons-material\";\nimport Slider from \"@mui/material/Slider\";\nimport TextField from \"@mui/material/TextField\";\nimport HeightIcon from \"@mui/icons-material/Height\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport FormGroup from \"@mui/material/FormGroup\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport FormControl from \"@mui/material/FormControl\";\nimport AccountBalanceWalletSharpIcon from \"@mui/icons-material/AccountBalanceWalletSharp\";\nimport { State } from \"./State\";\nimport Chip from \"@mui/material/Chip\";\nimport { ListItem } from \"@mui/material\";\nimport CalculateIcon from \"@mui/icons-material/Calculate\";\n\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Select from \"@mui/material/Select\";\n\n/*<Slider value={State.scale[\"x\"]}\n                      step={0.001}\n                      min={.8}\n                      max={1.5}\n                      onChange={(event) => {\n                        setRangeval(event.target.value)\n                        State.scale[\"x\"] = rangeval\n                        State.panelPos[\"x\"] = State.panelPos[\"x\"] + Number(rangeval)\n                        \n                      }}\n                      defaultValue={State.scale[\"x\"]} aria-label=\"Default\" valueLabelDisplay=\"auto\" sx={{ display: open ? \"block\" : \"none\" }} />*/\n\nconst drawerWidth = 240;\n\nconst modelList = [\n  {\n    title: \"Virgo\",\n    img: \"/anteprime/ANGOLARE/1B-APERTURA-DX.svg\",\n    value: \"virgo\",\n    prezzoBase: \"€ 679\",\n  },\n  {\n    title: \"Fenix\",\n    img: \"/anteprime/ANGOLARE/1B-APERTURA-SX.svg\",\n    value: \"fenix\",\n    prezzoBase: \"€ 679\",\n  },\n];\n\nconst openedMixin = (theme) => ({\n  width: drawerWidth,\n  transition: theme.transitions.create(\"width\", {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.enteringScreen,\n  }),\n  overflowX: \"hidden\",\n});\n\nconst closedMixin = (theme) => ({\n  transition: theme.transitions.create(\"width\", {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  overflowX: \"hidden\",\n  width: `calc(${theme.spacing(7)} + 1px)`,\n  [theme.breakpoints.up(\"sm\")]: {\n    width: `calc(${theme.spacing(8)} + 1px)`,\n  },\n});\n\nconst DrawerHeader = styled(\"div\")(({ theme }) => ({\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"flex-end\",\n  padding: theme.spacing(0, 1),\n  // necessary for content to be below app bar\n  ...theme.mixins.toolbar,\n}));\n\nconst AppBar = styled(MuiAppBar, {\n  shouldForwardProp: (prop) => prop !== \"open\",\n})(({ theme, open }) => ({\n  zIndex: theme.zIndex.drawer + 1,\n  transition: theme.transitions.create([\"width\", \"margin\"], {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  ...(open && {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  }),\n}));\n\nconst Drawer = styled(MuiDrawer, {\n  shouldForwardProp: (prop) => prop !== \"open\",\n})(({ theme, open }) => ({\n  width: drawerWidth,\n  flexShrink: 0,\n  whiteSpace: \"nowrap\",\n  boxSizing: \"border-box\",\n  ...(open && {\n    ...openedMixin(theme),\n    \"& .MuiDrawer-paper\": openedMixin(theme),\n  }),\n  ...(!open && {\n    ...closedMixin(theme),\n    \"& .MuiDrawer-paper\": closedMixin(theme),\n  }),\n}));\n\nexport default function Menu() {\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const [rangeval, setRangeval] = useState(null);\n\n  const [position, setPosition] = useState({ x: 0.6, y: 2, z: 1, x2: 1 });\n  const { x, y, z, x2 } = position;\n\n  function valueLabelFormat(value) {\n    let newval = Number(value * 100).toFixed(0);\n    return `${newval} CM`;\n  }\n\n  const [base, setBase] = useState(679);\n  const [nome, setNome] = useState(\"linea azzurra\");\n  const [hinge, setHinge] = useState(false);\n  const [modelMaterials, setModelMaterials] = useState();\n\n  const handleSphereClick = (clickedMaterial) => {\n    setModelMaterials(clickedMaterial.material);\n    setBase(Number(clickedMaterial.base));\n    setNome(clickedMaterial.nome);\n  };\n\n  const prezzo =\n    base +\n    (hinge ? 156 : 0) +\n    roundToNearestTen(x * 100 - 60) +\n    roundToNearestTen(y * 100 - 200);\n\n  useEffect(() => {\n    if (x >= 0.7 || y >= 2.2) {\n      setHinge(true);\n    } else {\n      setHinge(false);\n    }\n  }, [x, y]);\n\n  const [inputXValue, setInputXValue] = useState(0);\n  const [inputYValue, setInputYValue] = useState(0);\n\n  function updateValue(val, axis) {\n    let value = parseInt(val, 10);\n    const limits =\n      axis === \"x\" ? { min: 60, max: 100 } : { min: 200, max: 300 };\n\n    if (value > limits.max) value = limits.max;\n    if (value < limits.min) value = limits.min;\n\n    const setInputValue = axis === \"x\" ? setInputXValue : setInputYValue;\n    setInputValue(value);\n\n    let cm = value / 100;\n    setPosition({ ...position, [axis]: cm });\n  }\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      updateValue(inputXValue, \"x\");\n    }, 800);\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [inputXValue]);\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      updateValue(inputYValue, \"y\");\n    }, 800);\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [inputYValue]);\n\n  function roundToNearestTen(value) {\n    return Math.round(value / 10) * 10;\n  }\n  const [model, setModel] = useState(\"virgo\");\n\n  const handleModelChange = (event) => {\n    setModel(event.target.value);\n  };\n\n  const [doorPosition, setDoorPosition] = useState(\"left\");\n\n  const handledoorPositionChange = (event) => {\n    setDoorPosition(event.target.value);\n  };\n\n  return (\n    <>\n      <Box sx={{ display: \"flex\" }}>\n        <CssBaseline />\n        <AppBar style={{ background: \"#000\" }} position=\"fixed\" open={open}>\n          <Toolbar>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={handleDrawerOpen}\n              edge=\"start\"\n              sx={{\n                marginRight: 5,\n                ...(open && { display: \"none\" }),\n              }}\n            >\n              <MenuIcon />\n            </IconButton>\n            <img\n              style={{\n                width: \"175px\",\n                padding: \"0 20px 0 0\",\n                margin: \"0 20px 0 0\",\n                filter: \"invert(1)\",\n                borderRight: \"2px solid #000\",\n                display: open ? \"none\" : \"block\",\n              }}\n              src={\"/logo2.png\"}\n              alt={\"Vetreria Re\"}\n              loading=\"lazy\"\n            />\n            <Typography variant=\"h6\" noWrap component=\"div\">\n              Box Doccia 001 - prezzo: € {prezzo}\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <Drawer variant=\"permanent\" open={open}>\n          <DrawerHeader>\n            <img\n              style={{\n                width: \"75%\",\n                padding: \"0px 15px 0px 0px\",\n                borderRight: \"2px solid rgb(0, 0, 0)\",\n                display: \"block\",\n                marginRight: \"8px\",\n              }}\n              src={\"/logo2.png\"}\n              alt={\"Vetreria Re\"}\n              loading=\"lazy\"\n            />\n            <IconButton onClick={handleDrawerClose}>\n              {theme.direction === \"rtl\" ? <Close /> : <Close />}\n            </IconButton>\n          </DrawerHeader>\n          <Divider />\n          <List>\n            <ListItemButton\n              onClick={handleDrawerOpen}\n              key={\"materriale1\"}\n              sx={{\n                minHeight: 48,\n                justifyContent: open ? \"initial\" : \"center\",\n                px: 2.5,\n              }}\n            >\n              <ListItemIcon\n                sx={{\n                  minWidth: 0,\n                  mr: open ? 3 : \"auto\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <GradientIcon />\n              </ListItemIcon>\n              <ListItemText\n                primary={\"Modello\"}\n                sx={{ opacity: open ? 1 : 0 }}\n              />\n            </ListItemButton>\n            {open ? (\n              <React.Fragment>\n                <Select\n                  labelId=\"model-select\"\n                  id=\"select-model\"\n                  value={model}\n                  label=\"Modello\"\n                  onChange={handleModelChange}\n                >\n                  {modelList.map((m, i) => {\n                    return (\n                      <MenuItem key={i} value={m.value}>\n                        <div\n                          style={{\n                            display: \"flex\",\n                            flexDirection: \"row\",\n                            justifyContent: \"start\",\n                            alignItems: \"center\",\n                          }}\n                        >\n                          <img\n                            style={{\n                              width: \"25%\",\n                            }}\n                            src={m.img}\n                            alt={m.title}\n                            loading=\"lazy\"\n                          />\n                          <div style={{ marginLeft: \"10px\" }}>\n                            <h3 style={{ marginTop: \"0\", marginBottom: \"5px\" }}>\n                              {m.title}\n                            </h3>\n                            <p style={{ marginTop: \"0\", marginBottom: \"5px\" }}>\n                              Prezzo Base: {m.prezzoBase}\n                            </p>\n                          </div>\n                        </div>\n                      </MenuItem>\n                    );\n                  })}\n                </Select>\n              </React.Fragment>\n            ) : (\n              \"\"\n            )}\n            <ListItemButton\n              onClick={handleDrawerOpen}\n              key={\"materriale\"}\n              sx={{\n                minHeight: 48,\n                justifyContent: open ? \"initial\" : \"center\",\n                px: 2.5,\n              }}\n            >\n              <ListItemIcon\n                sx={{\n                  minWidth: 0,\n                  mr: open ? 3 : \"auto\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <GradientIcon />\n              </ListItemIcon>\n              <ListItemText\n                primary={\"Materiale del Vetro\"}\n                sx={{ opacity: open ? 1 : 0 }}\n              />\n            </ListItemButton>\n            {open ? <Sfera onClick={handleSphereClick} /> : \"\"}\n\n            {open && model == \"virgo\" ? (\n              <React.Fragment>\n                <Divider textAlign=\"left\">\n                  <Chip\n                    label=\"Posizione Porta\"\n                    sx={{ display: open ? \"flex\" : \"none\" }}\n                  />\n                </Divider>\n                <Select\n                  labelId=\"model-select\"\n                  id=\"select-door-pos\"\n                  value={doorPosition}\n                  label=\"Modello\"\n                  onChange={handledoorPositionChange}\n                  style={{ margin: \"10px 0\", border: \"none\" }}\n                >\n                  <MenuItem key=\"doorleft\" value=\"left\">\n                    <div\n                      style={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        justifyContent: \"start\",\n                        alignItems: \"center\",\n                      }}\n                    >\n                      <img\n                        style={{\n                          width: \"25%\",\n                        }}\n                        src=\"/anteprime/ANGOLARE/1B-APERTURA-SX.svg\"\n                        alt=\"sinistra\"\n                        loading=\"lazy\"\n                      />\n                      <div style={{ marginLeft: \"10px\" }}>\n                        <h3 style={{ marginTop: \"0\", marginBottom: \"5px\" }}>\n                          Sinistra\n                        </h3>\n                      </div>\n                    </div>\n                  </MenuItem>\n                  <MenuItem key=\"doorright\" value=\"right\">\n                    <div\n                      style={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        justifyContent: \"start\",\n                        alignItems: \"center\",\n                      }}\n                    >\n                      <img\n                        style={{\n                          width: \"25%\",\n                        }}\n                        src=\"/anteprime/ANGOLARE/1B-APERTURA-DX.svg\"\n                        alt=\"sinistra\"\n                        loading=\"lazy\"\n                      />\n                      <div style={{ marginLeft: \"10px\" }}>\n                        <h3 style={{ marginTop: \"0\", marginBottom: \"5px\" }}>\n                          Destra\n                        </h3>\n                      </div>\n                    </div>\n                  </MenuItem>\n                </Select>\n              </React.Fragment>\n            ) : (\n              \"\"\n            )}\n            <Divider textAlign=\"left\">\n              <Chip label=\"Porta\" sx={{ display: open ? \"flex\" : \"none\" }} />\n            </Divider>\n            <ListItemButton\n              onClick={handleDrawerOpen}\n              key={\"Altezza2\"}\n              sx={{\n                minHeight: 48,\n                justifyContent: open ? \"initial\" : \"center\",\n                px: 2.5,\n              }}\n            >\n              <ListItemIcon\n                sx={{\n                  minWidth: 0,\n                  mr: open ? 3 : \"auto\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <HeightIcon />\n              </ListItemIcon>\n              <ListItemText\n                primary={\"Altezza\"}\n                secondary={\n                  <React.Fragment>\n                    <Slider\n                      value={position.y}\n                      step={0.01}\n                      min={2}\n                      max={3}\n                      onChange={(e) => {\n                        setInputYValue(Number(e.target.value * 100).toFixed(0));\n                        setPosition({ ...position, y: e.target.value });\n                      }}\n                      defaultValue={position.y}\n                      aria-label=\"Default\"\n                      valueLabelFormat={valueLabelFormat}\n                      valueLabelDisplay=\"auto\"\n                      sx={{ display: open ? \"block\" : \"none\" }}\n                    />\n                    <TextField\n                      id=\"standard-number\"\n                      label=\"Misura in CM\"\n                      type=\"number\"\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                      value={inputYValue}\n                      InputProps={{ inputProps: { min: 200, max: 300 } }}\n                      onChange={(e) => {\n                        setInputYValue(e.target.value);\n                      }}\n                      variant=\"standard\"\n                    />\n                  </React.Fragment>\n                }\n                sx={{ opacity: open ? 1 : 0 }}\n              />\n            </ListItemButton>\n\n            <Divider />\n\n            <ListItemButton\n              onClick={handleDrawerOpen}\n              key={\"larghezza2\"}\n              sx={{\n                minHeight: 48,\n                justifyContent: open ? \"initial\" : \"center\",\n                px: 2.5,\n              }}\n            >\n              <ListItemIcon\n                sx={{\n                  minWidth: 0,\n                  mr: open ? 3 : \"auto\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <HeightIcon style={{ transform: \"rotate(90deg)\" }} />\n              </ListItemIcon>\n              <ListItemText\n                primary={\"Larghezza\"}\n                secondary={\n                  <React.Fragment>\n                    <Slider\n                      value={position.x}\n                      step={0.01}\n                      min={0.6}\n                      max={1}\n                      onChange={(e) => {\n                        setInputXValue(Number(e.target.value * 100).toFixed(0));\n                        setPosition({ ...position, x: e.target.value });\n                      }}\n                      defaultValue={position.x}\n                      aria-label=\"Default\"\n                      valueLabelFormat={valueLabelFormat}\n                      valueLabelDisplay=\"auto\"\n                      sx={{ display: open ? \"block\" : \"none\" }}\n                    />\n                    <TextField\n                      id=\"standard-number\"\n                      label=\"Misura in CM\"\n                      type=\"number\"\n                      value={inputXValue}\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                      InputProps={{ inputProps: { min: 60, max: 100 } }}\n                      onChange={(e) => {\n                        setInputXValue(e.target.value);\n                      }}\n                      variant=\"standard\"\n                    />\n                  </React.Fragment>\n                }\n                sx={{ opacity: open ? 1 : 0 }}\n              />\n            </ListItemButton>\n\n            {/* <Divider textAlign=\"left\">\n              <Chip label=\"Vetro laterale\" sx={{ display: open ? \"flex\" : \"none\" }} />\n            </Divider>\n\n            <ListItemButton\n                onClick={handleDrawerOpen}\n                key={\"Altezza\"}\n                sx={{\n                  minHeight: 48,\n                  justifyContent: open ? 'initial' : 'center',\n                  px: 2.5,\n                }}\n              >\n                <ListItemIcon\n                  sx={{\n                    minWidth: 0,\n                    mr: open ? 3 : 'auto',\n                    justifyContent: 'center',\n                  }}\n                >\n                  <HeightIcon />\n                </ListItemIcon>\n                <ListItemText primary={\"Altezza\"} secondary={\n                  <React.Fragment>\n                    <Slider value={position.y.toFixed(2)}\n                      step={0.1}\n                      min={2}\n                      max={3}\n                      onChange={(e) => setPosition({ ...position, y: e.target.value })}\n                      defaultValue={position.y.toFixed(2)} aria-label=\"Default\" valueLabelFormat={valueLabelFormat} valueLabelDisplay=\"auto\" sx={{ display: open ? \"block\" : \"none\" }} />\n                  </React.Fragment>\n                } \n                sx={{ opacity: open ? 1 : 0 }} />\n                \n            </ListItemButton>\n            \n            <Divider />\n\n            <ListItemButton\n                onClick={handleDrawerOpen}\n                key={\"larghezza\"}\n                sx={{\n                  minHeight: 48,\n                  justifyContent: open ? 'initial' : 'center',\n                  px: 2.5,\n                }}\n              >\n                <ListItemIcon\n                  sx={{\n                    minWidth: 0,\n                    mr: open ? 3 : 'auto',\n                    justifyContent: 'center',\n                  }}\n                >\n                  <HeightIcon style={{transform:\"rotate(90deg)\"}} />\n                </ListItemIcon>\n                <ListItemText primary={\"Larghezza\"} \n                secondary={\n                  <React.Fragment>\n                    <Slider value={position.x2}\n                      step={0.1}\n                      min={.6}\n                      max={2}\n                      onChange={(e) => setPosition({ ...position, x2: e.target.value })}\n                      defaultValue={position.x2} aria-label=\"Default\" valueLabelFormat={valueLabelFormat} valueLabelDisplay=\"auto\" sx={{ display: open ? \"block\" : \"none\" }} />\n                  </React.Fragment>\n                } \n                sx={{ opacity: open ? 1 : 0 }} />\n            </ListItemButton> */}\n\n            {/* <ListItemButton\n                onClick={handleDrawerOpen}\n                key={\"cerniera\"}\n                sx={{\n                  minHeight: 48,\n                  justifyContent: open ? 'initial' : 'center',\n                  px: 2.5,\n                }}\n              >\n                <ListItemIcon\n                  sx={{\n                    minWidth: 0,\n                    mr: open ? 3 : 'auto',\n                    justifyContent: 'center',\n                  }}\n                >\n                  <AccountBalanceWalletSharpIcon style={{transform:\"rotate(180deg)\"}} />\n                </ListItemIcon>\n                <ListItemText primary={\"Cerniera aggiuntiva?\"} \n                secondary={\n                  <React.Fragment>\n                   <FormControl component=\"fieldset\">\n                    <FormGroup aria-label=\"position\" row>\n\n                      <FormControlLabel\n                      component={'span'}\n                        value={hinge}\n                        onChange={() => setHinge(!hinge)}\n                        control={<Checkbox />}\n                        label=\"terza cerniera\"\n                        labelPlacement=\"end\"\n                      />\n                    </FormGroup>\n                  </FormControl>\n                  </React.Fragment>\n                } \n                sx={{ opacity: open ? 1 : 0 }} />\n            </ListItemButton> */}\n            {open && (\n              <>\n                <Divider textAlign=\"left\">\n                  <Chip\n                    label=\"Riepilogo\"\n                    sx={{ display: open ? \"flex\" : \"none\" }}\n                  />\n                </Divider>\n\n                <ListItem alignItems=\"flex-start\">\n                  <ListItemIcon\n                    sx={{\n                      minWidth: 0,\n                      mr: open ? 3 : \"auto\",\n                      justifyContent: \"center\",\n                    }}\n                  >\n                    <GradientIcon />\n                  </ListItemIcon>\n                  <ListItemText\n                    primary=\"Materiale Vetro\"\n                    secondary={\n                      <React.Fragment>\n                        <Typography\n                          sx={{ display: \"block\" }}\n                          component=\"span\"\n                          variant=\"body2\"\n                          color=\"text.primary\"\n                          textAlign=\"right\"\n                          margin=\"10px 0\"\n                        >\n                          {nome}\n                        </Typography>\n                        <Typography\n                          sx={{ display: \"block\" }}\n                          component=\"span\"\n                          variant=\"body2\"\n                          color=\"text.primary\"\n                          textAlign=\"right\"\n                        >\n                          € {base}\n                        </Typography>\n                      </React.Fragment>\n                    }\n                  />\n                </ListItem>\n\n                {y > 2 && (\n                  <ListItem alignItems=\"flex-start\">\n                    <ListItemIcon\n                      sx={{\n                        minWidth: 0,\n                        mr: open ? 3 : \"auto\",\n                        justifyContent: \"center\",\n                      }}\n                    >\n                      <GradientIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                      primary=\"Altezza\"\n                      secondary={\n                        <React.Fragment>\n                          <Typography\n                            sx={{ display: \"block\" }}\n                            component=\"span\"\n                            variant=\"body2\"\n                            color=\"text.primary\"\n                            textAlign=\"right\"\n                          >\n                            + € {roundToNearestTen(y * 100 - 200).toFixed(2)}\n                          </Typography>\n                        </React.Fragment>\n                      }\n                    />\n                  </ListItem>\n                )}\n\n                {x > 0.6 && (\n                  <ListItem alignItems=\"flex-start\">\n                    <ListItemIcon\n                      sx={{\n                        minWidth: 0,\n                        mr: open ? 3 : \"auto\",\n                        justifyContent: \"center\",\n                      }}\n                    >\n                      <GradientIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                      primary=\"Larghezza\"\n                      secondary={\n                        <React.Fragment>\n                          <Typography\n                            sx={{ display: \"block\" }}\n                            component=\"span\"\n                            variant=\"body2\"\n                            color=\"text.primary\"\n                            textAlign=\"right\"\n                          >\n                            + € {roundToNearestTen(x * 100 - 60).toFixed(2)}\n                          </Typography>\n                        </React.Fragment>\n                      }\n                    />\n                  </ListItem>\n                )}\n\n                {hinge && (\n                  <ListItem alignItems=\"flex-start\">\n                    <ListItemIcon\n                      sx={{\n                        minWidth: 0,\n                        mr: open ? 3 : \"auto\",\n                        justifyContent: \"center\",\n                      }}\n                    >\n                      <AccountBalanceWalletSharpIcon\n                        style={{ transform: \"rotate(180deg)\" }}\n                      />\n                    </ListItemIcon>\n                    <ListItemText\n                      primary=\"Cerniera aggiuntiva\"\n                      secondary={\n                        <React.Fragment>\n                          <Typography\n                            sx={{ display: \"block\" }}\n                            component=\"span\"\n                            variant=\"body2\"\n                            color=\"text.primary\"\n                            textAlign=\"right\"\n                            margin=\"10px 0\"\n                          >\n                            + € 156\n                          </Typography>\n                          <Typography\n                            sx={{ display: \"block\" }}\n                            component=\"p\"\n                            variant=\"body2\"\n                            color=\"text.primary\"\n                            whiteSpace=\"normal\"\n                          >\n                            Cerniera piatta a scatto con regolazione angolo di\n                            chiusura, pomello inox finitura cromo lucido\n                          </Typography>\n                        </React.Fragment>\n                      }\n                    />\n                  </ListItem>\n                )}\n\n                <ListItem alignItems=\"flex-start\">\n                  <ListItemIcon\n                    sx={{\n                      minWidth: 0,\n                      mr: open ? 3 : \"auto\",\n                      justifyContent: \"center\",\n                    }}\n                  >\n                    <CalculateIcon />\n                  </ListItemIcon>\n                  <ListItemText\n                    primary=\"Totale\"\n                    secondary={\n                      <React.Fragment>\n                        <Typography\n                          sx={{ display: \"block\" }}\n                          component=\"span\"\n                          variant=\"body2\"\n                          color=\"text.primary\"\n                          textAlign=\"right\"\n                          margin=\"10px 0\"\n                          fontWeight=\"bold\"\n                          fontSize=\"1.4rem\"\n                        >\n                          € {prezzo}\n                        </Typography>\n                      </React.Fragment>\n                    }\n                  />\n                </ListItem>\n              </>\n            )}\n          </List>\n        </Drawer>\n      </Box>\n      <VetreriaBox\n        x={x}\n        y={y}\n        z={z}\n        x2={x2}\n        material={modelMaterials}\n        hinge={hinge}\n        model={model}\n        doorPosition={doorPosition}\n      />\n    </>\n  );\n}\n","import React from \"react\"\r\nimport Menu from \"./components/drawer\"\r\n\r\n\r\nexport default function App() {\r\nreturn (\r\n  <>\r\n    <Menu />\r\n  </>\r\n)\r\n}\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport \"./styles.css\"\r\nimport \"react-colorful/dist/index.css\"\r\nimport App from \"./App\"\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"))\r\n","const THREE = require(\"three\");\nglobal.THREE = THREE;\n\n\nexport const GlassMaterial = new THREE.MeshPhysicalMaterial({\n    //transmission:1,\n    //thickness:0.4,\n    color: new THREE.Color('#f0f9ff').convertSRGBToLinear(),\n    //roughness: 0,\n    //clearcoat: .40,\n    //clearcoatRoughness: 0.2,\n      metalness: .9,\n      roughness: .05,\n      envMapIntensity: 0.29,\n      clearcoat: .51,\n      transparent: true,\n      // transmission: .95,\n      opacity: .22,\n      reflectivity: 0.2,\n      refractionRatio: 0.3985,\n      ior: 2.33,\n      side: THREE.BackSide,\n  });\n\n  // export const GlassMaterial = new THREE.MeshPhysicalMaterial({\n  //     transmission:1,\n  //     metalness: 0,\n  //     roughness: 0,\n  //     ior: 2.33,\n  //     color: new THREE.Color('#eee').convertSRGBToLinear(),\n  // });\n  // export const GlassMaterial2 = new THREE.MeshPhysicalMaterial({\n  //     transmission:1,\n  //     metalness: 0,\n  //     roughness: 0,\n  //     ior: 2.33,\n  //     color: new THREE.Color('#fff').convertSRGBToLinear(),\n  // });\n\n  export const GlassMaterial2 = new THREE.MeshPhysicalMaterial({\n    //transmission:1,\n    //thickness:0.4,\n    color: new THREE.Color('#fff').convertSRGBToLinear(),\n    //roughness: 0,\n    //clearcoat: .40,\n    //clearcoatRoughness: 0.2,\n      metalness: .9,\n      roughness: .05,\n      envMapIntensity: 0.29,\n      clearcoat: .51,\n      transparent: true,\n      // transmission: .95,\n      opacity: .2,\n      reflectivity: 0.2,\n      refractionRatio: 0.3985,\n      ior: 2.33,\n      side: THREE.BackSide,\n  });\n\n  export const GlassMaterial3 = new THREE.MeshPhysicalMaterial({\n    //transmission:1,\n    //thickness:0.4,\n    color: new THREE.Color('#333').convertSRGBToLinear(),\n    //roughness: 0,\n    //clearcoat: .40,\n    //clearcoatRoughness: 0.2,\n      metalness: .9,\n      roughness: .05,\n      envMapIntensity: 0.29,\n      clearcoat: .51,\n      transparent: true,\n      // transmission: .95,\n      opacity: .25,\n      reflectivity: 0.2,\n      refractionRatio: 0.3985,\n      ior: 0.9,\n      side: THREE.BackSide,\n  });\n\n  export const GlassMaterial4 = new THREE.MeshPhysicalMaterial({\n    //transmission:1,\n    //thickness:0.4,\n    color: new THREE.Color('#0531c0').convertSRGBToLinear(),\n    //roughness: 0,\n    //clearcoat: .40,\n    //clearcoatRoughness: 0.2,\n      metalness: .9,\n      roughness: .05,\n      envMapIntensity: 0.29,\n      clearcoat: .51,\n      transparent: true,\n      // transmission: .95,\n      opacity: .25,\n      reflectivity: 0.2,\n      refractionRatio: 0.3985,\n      ior: 0.9,\n      side: THREE.BackSide,\n  });\n\n  export const GlassMaterial5 = new THREE.MeshPhysicalMaterial({\n    attach:\"material\",\n    color: new THREE.Color('#fff').convertSRGBToLinear(),\n    metalness:0,\n    roughness:0,\n    transmission:0.9,\n    clearcoat:1,\n    clearcoatRoughness:0,\n    reflectivity:1,\n    refractionRatio:0.98\n  });\n\n"],"sourceRoot":""}