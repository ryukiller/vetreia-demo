{"ast":null,"code":"import _construct from \"/Users/riandasilva/vetreria/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/construct\";\nimport _toConsumableArray from \"/Users/riandasilva/vetreria/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"/Users/riandasilva/vetreria/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport { applyProps } from '@react-three/fiber';\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport mergeRefs from 'react-merge-refs';\nvar Lightformer = /*#__PURE__*/React.forwardRef(function (_ref, forwardRef) {\n  var args = _ref.args,\n      map = _ref.map,\n      _ref$toneMapped = _ref.toneMapped,\n      toneMapped = _ref$toneMapped === void 0 ? false : _ref$toneMapped,\n      _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'white' : _ref$color,\n      _ref$form = _ref.form,\n      Form = _ref$form === void 0 ? 'rect' : _ref$form,\n      _ref$intensity = _ref.intensity,\n      intensity = _ref$intensity === void 0 ? 1 : _ref$intensity,\n      _ref$scale = _ref.scale,\n      scale = _ref$scale === void 0 ? 1 : _ref$scale,\n      target = _ref.target,\n      children = _ref.children,\n      props = _objectWithoutProperties(_ref, [\"args\", \"map\", \"toneMapped\", \"color\", \"form\", \"intensity\", \"scale\", \"target\", \"children\"]);\n\n  // Apply emissive power\n  var ref = React.useRef(null);\n  React.useLayoutEffect(function () {\n    if (!children && !props.material) {\n      applyProps(ref.current.material, {\n        color\n      });\n      ref.current.material.color.multiplyScalar(intensity);\n    }\n  }, [color, intensity, children, props.material]); // Target light\n\n  React.useLayoutEffect(function () {\n    if (target) ref.current.lookAt(Array.isArray(target) ? _construct(THREE.Vector3, _toConsumableArray(target)) : target);\n  }, [target]); // Fix 2-dimensional scale\n\n  scale = Array.isArray(scale) && scale.length === 2 ? [scale[0], scale[1], 1] : scale;\n  return /*#__PURE__*/React.createElement(\"mesh\", _extends({\n    ref: mergeRefs([ref, forwardRef]),\n    scale: scale\n  }, props), Form === 'circle' ? /*#__PURE__*/React.createElement(\"ringGeometry\", {\n    args: [0, 1, 64]\n  }) : Form === 'ring' ? /*#__PURE__*/React.createElement(\"ringGeometry\", {\n    args: [0.5, 1, 64]\n  }) : Form === 'rect' ? /*#__PURE__*/React.createElement(\"planeGeometry\", null) : /*#__PURE__*/React.createElement(Form, {\n    args: args\n  }), children ? children : !props.material ? /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    toneMapped: toneMapped,\n    map: map,\n    side: THREE.DoubleSide\n  }) : null);\n});\nexport { Lightformer };","map":{"version":3,"sources":["/Users/riandasilva/vetreria/node_modules/@react-three/drei/core/Lightformer.js"],"names":["_extends","applyProps","React","THREE","mergeRefs","Lightformer","forwardRef","args","map","toneMapped","color","form","Form","intensity","scale","target","children","props","ref","useRef","useLayoutEffect","material","current","multiplyScalar","lookAt","Array","isArray","Vector3","length","createElement","side","DoubleSide"],"mappings":"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","sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport { applyProps } from '@react-three/fiber';\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport mergeRefs from 'react-merge-refs';\n\nconst Lightformer = /*#__PURE__*/React.forwardRef(({\n  args,\n  map,\n  toneMapped = false,\n  color = 'white',\n  form: Form = 'rect',\n  intensity = 1,\n  scale = 1,\n  target,\n  children,\n  ...props\n}, forwardRef) => {\n  // Apply emissive power\n  const ref = React.useRef(null);\n  React.useLayoutEffect(() => {\n    if (!children && !props.material) {\n      applyProps(ref.current.material, {\n        color\n      });\n      ref.current.material.color.multiplyScalar(intensity);\n    }\n  }, [color, intensity, children, props.material]); // Target light\n\n  React.useLayoutEffect(() => {\n    if (target) ref.current.lookAt(Array.isArray(target) ? new THREE.Vector3(...target) : target);\n  }, [target]); // Fix 2-dimensional scale\n\n  scale = Array.isArray(scale) && scale.length === 2 ? [scale[0], scale[1], 1] : scale;\n  return /*#__PURE__*/React.createElement(\"mesh\", _extends({\n    ref: mergeRefs([ref, forwardRef]),\n    scale: scale\n  }, props), Form === 'circle' ? /*#__PURE__*/React.createElement(\"ringGeometry\", {\n    args: [0, 1, 64]\n  }) : Form === 'ring' ? /*#__PURE__*/React.createElement(\"ringGeometry\", {\n    args: [0.5, 1, 64]\n  }) : Form === 'rect' ? /*#__PURE__*/React.createElement(\"planeGeometry\", null) : /*#__PURE__*/React.createElement(Form, {\n    args: args\n  }), children ? children : !props.material ? /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    toneMapped: toneMapped,\n    map: map,\n    side: THREE.DoubleSide\n  }) : null);\n});\n\nexport { Lightformer };\n"]},"metadata":{},"sourceType":"module"}