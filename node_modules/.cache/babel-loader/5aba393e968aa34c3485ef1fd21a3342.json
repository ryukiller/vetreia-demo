{"ast":null,"code":"import _slicedToArray from \"/Users/riandasilva/vetreria/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/riandasilva/vetreria/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { WebGLCubeRenderTarget, HalfFloatType } from 'three';\nimport * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\n\nfunction CubeCamera(_ref) {\n  var children = _ref.children,\n      fog = _ref.fog,\n      _ref$frames = _ref.frames,\n      frames = _ref$frames === void 0 ? Infinity : _ref$frames,\n      _ref$resolution = _ref.resolution,\n      resolution = _ref$resolution === void 0 ? 256 : _ref$resolution,\n      _ref$near = _ref.near,\n      near = _ref$near === void 0 ? 1 : _ref$near,\n      _ref$far = _ref.far,\n      far = _ref$far === void 0 ? 1000 : _ref$far,\n      props = _objectWithoutProperties(_ref, [\"children\", \"fog\", \"frames\", \"resolution\", \"near\", \"far\"]);\n\n  var ref = React.useRef();\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      camera = _React$useState2[0],\n      setCamera = _React$useState2[1];\n\n  var scene = useThree(function (_ref2) {\n    var scene = _ref2.scene;\n    return scene;\n  });\n  var gl = useThree(function (_ref3) {\n    var gl = _ref3.gl;\n    return gl;\n  });\n  var fbo = React.useMemo(function () {\n    var fbo = new WebGLCubeRenderTarget(resolution);\n    fbo.texture.type = HalfFloatType;\n    return fbo;\n  }, [resolution]);\n  var count = 0;\n  useFrame(function () {\n    if (camera && ref.current && (frames === Infinity || count < frames)) {\n      ref.current.traverse(function (obj) {\n        return obj.visible = false;\n      });\n      var originalFog = scene.fog;\n      scene.fog = fog || originalFog;\n      camera.update(gl, scene);\n      scene.fog = originalFog;\n      ref.current.traverse(function (obj) {\n        return obj.visible = true;\n      });\n      count++;\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"group\", props, /*#__PURE__*/React.createElement(\"cubeCamera\", {\n    ref: setCamera,\n    args: [near, far, fbo]\n  }), /*#__PURE__*/React.createElement(\"group\", {\n    ref: ref\n  }, children(fbo.texture)));\n}\n\nexport { CubeCamera };","map":{"version":3,"sources":["/Users/riandasilva/vetreria/node_modules/@react-three/drei/core/CubeCamera.js"],"names":["WebGLCubeRenderTarget","HalfFloatType","React","useThree","useFrame","CubeCamera","children","fog","frames","Infinity","resolution","near","far","props","ref","useRef","useState","camera","setCamera","scene","gl","fbo","useMemo","texture","type","count","current","traverse","obj","visible","originalFog","update","createElement","args"],"mappings":";;AAAA,SAASA,qBAAT,EAAgCC,aAAhC,QAAqD,OAArD;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,oBAAnC;;AAEA,SAASC,UAAT,OAQG;AAAA,MAPDC,QAOC,QAPDA,QAOC;AAAA,MANDC,GAMC,QANDA,GAMC;AAAA,yBALDC,MAKC;AAAA,MALDA,MAKC,4BALQC,QAKR;AAAA,6BAJDC,UAIC;AAAA,MAJDA,UAIC,gCAJY,GAIZ;AAAA,uBAHDC,IAGC;AAAA,MAHDA,IAGC,0BAHM,CAGN;AAAA,sBAFDC,GAEC;AAAA,MAFDA,GAEC,yBAFK,IAEL;AAAA,MADEC,KACF;;AACD,MAAMC,GAAG,GAAGZ,KAAK,CAACa,MAAN,EAAZ;;AADC,wBAE2Bb,KAAK,CAACc,QAAN,EAF3B;AAAA;AAAA,MAEMC,MAFN;AAAA,MAEcC,SAFd;;AAGD,MAAMC,KAAK,GAAGhB,QAAQ,CAAC;AAAA,QACrBgB,KADqB,SACrBA,KADqB;AAAA,WAEjBA,KAFiB;AAAA,GAAD,CAAtB;AAGA,MAAMC,EAAE,GAAGjB,QAAQ,CAAC;AAAA,QAClBiB,EADkB,SAClBA,EADkB;AAAA,WAEdA,EAFc;AAAA,GAAD,CAAnB;AAGA,MAAMC,GAAG,GAAGnB,KAAK,CAACoB,OAAN,CAAc,YAAM;AAC9B,QAAMD,GAAG,GAAG,IAAIrB,qBAAJ,CAA0BU,UAA1B,CAAZ;AACAW,IAAAA,GAAG,CAACE,OAAJ,CAAYC,IAAZ,GAAmBvB,aAAnB;AACA,WAAOoB,GAAP;AACD,GAJW,EAIT,CAACX,UAAD,CAJS,CAAZ;AAKA,MAAIe,KAAK,GAAG,CAAZ;AACArB,EAAAA,QAAQ,CAAC,YAAM;AACb,QAAIa,MAAM,IAAIH,GAAG,CAACY,OAAd,KAA0BlB,MAAM,KAAKC,QAAX,IAAuBgB,KAAK,GAAGjB,MAAzD,CAAJ,EAAsE;AACpEM,MAAAA,GAAG,CAACY,OAAJ,CAAYC,QAAZ,CAAqB,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,OAAJ,GAAc,KAAlB;AAAA,OAAxB;AACA,UAAMC,WAAW,GAAGX,KAAK,CAACZ,GAA1B;AACAY,MAAAA,KAAK,CAACZ,GAAN,GAAYA,GAAG,IAAIuB,WAAnB;AACAb,MAAAA,MAAM,CAACc,MAAP,CAAcX,EAAd,EAAkBD,KAAlB;AACAA,MAAAA,KAAK,CAACZ,GAAN,GAAYuB,WAAZ;AACAhB,MAAAA,GAAG,CAACY,OAAJ,CAAYC,QAAZ,CAAqB,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,OAAJ,GAAc,IAAlB;AAAA,OAAxB;AACAJ,MAAAA,KAAK;AACN;AACF,GAVO,CAAR;AAWA,SAAO,aAAavB,KAAK,CAAC8B,aAAN,CAAoB,OAApB,EAA6BnB,KAA7B,EAAoC,aAAaX,KAAK,CAAC8B,aAAN,CAAoB,YAApB,EAAkC;AACrGlB,IAAAA,GAAG,EAAEI,SADgG;AAErGe,IAAAA,IAAI,EAAE,CAACtB,IAAD,EAAOC,GAAP,EAAYS,GAAZ;AAF+F,GAAlC,CAAjD,EAGhB,aAAanB,KAAK,CAAC8B,aAAN,CAAoB,OAApB,EAA6B;AAC5ClB,IAAAA,GAAG,EAAEA;AADuC,GAA7B,EAEdR,QAAQ,CAACe,GAAG,CAACE,OAAL,CAFM,CAHG,CAApB;AAMD;;AAED,SAASlB,UAAT","sourcesContent":["import { WebGLCubeRenderTarget, HalfFloatType } from 'three';\nimport * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\n\nfunction CubeCamera({\n  children,\n  fog,\n  frames = Infinity,\n  resolution = 256,\n  near = 1,\n  far = 1000,\n  ...props\n}) {\n  const ref = React.useRef();\n  const [camera, setCamera] = React.useState();\n  const scene = useThree(({\n    scene\n  }) => scene);\n  const gl = useThree(({\n    gl\n  }) => gl);\n  const fbo = React.useMemo(() => {\n    const fbo = new WebGLCubeRenderTarget(resolution);\n    fbo.texture.type = HalfFloatType;\n    return fbo;\n  }, [resolution]);\n  let count = 0;\n  useFrame(() => {\n    if (camera && ref.current && (frames === Infinity || count < frames)) {\n      ref.current.traverse(obj => obj.visible = false);\n      const originalFog = scene.fog;\n      scene.fog = fog || originalFog;\n      camera.update(gl, scene);\n      scene.fog = originalFog;\n      ref.current.traverse(obj => obj.visible = true);\n      count++;\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"group\", props, /*#__PURE__*/React.createElement(\"cubeCamera\", {\n    ref: setCamera,\n    args: [near, far, fbo]\n  }), /*#__PURE__*/React.createElement(\"group\", {\n    ref: ref\n  }, children(fbo.texture)));\n}\n\nexport { CubeCamera };\n"]},"metadata":{},"sourceType":"module"}