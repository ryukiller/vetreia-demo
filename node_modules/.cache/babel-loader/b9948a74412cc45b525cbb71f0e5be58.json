{"ast":null,"code":"import _objectSpread from \"/Users/riandasilva/vetreria/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/riandasilva/vetreria/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/riandasilva/vetreria/src/components/Sphere.js\",\n    _s = $RefreshSig$();\n\nvar THREE = require(\"three\");\n\nglobal.THREE = THREE;\nimport React, { Suspense, useRef, useState, useEffect } from \"react\";\nimport { Canvas } from '@react-three/fiber';\nimport { Environment } from '@react-three/drei';\nimport { GlassMaterial, GlassMaterial2, GlassMaterial3, GlassMaterial4 } from './Materials';\n\nfunction Sphere(props) {\n  _s();\n\n  var ref = useRef(); // Hold state for hovered and clicked events\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      hovered = _useState2[0],\n      hover = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      clicked = _useState4[0],\n      click = _useState4[1]; // Subscribe this component to the render-loop, rotate the mesh every frame\n  // Return the view, these are regular Threejs elements expressed in JSX\n\n\n  return /*#__PURE__*/_jsxDEV(\"mesh\", _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    scale: clicked || hovered ? 1.2 : 1,\n    onClick: function onClick(event) {\n      return click(!clicked);\n    },\n    onPointerOver: function onPointerOver(event) {\n      return hover(true);\n    },\n    onPointerOut: function onPointerOut(event) {\n      return hover(false);\n    },\n    children: /*#__PURE__*/_jsxDEV(\"sphereGeometry\", {\n      args: [.5, 64]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Sphere, \"1rXSAAyBFhZEmUuKkdeoiIUYaY8=\");\n\n_c = Sphere;\nexport function Sfera() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Canvas, {\n      style: {\n        height: \"100px\",\n        background: \"#fff\"\n      },\n      pixelRatio: [1, 1.5],\n      concurrent: true,\n      camera: {\n        fov: 30\n      },\n      children: /*#__PURE__*/_jsxDEV(Suspense, {\n        fallback: null,\n        children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {\n          intensity: 0.5\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"spotLight\", {\n          position: [10, 10, 10],\n          angle: 0.15,\n          penumbra: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n          position: [-10, -10, -10]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Sphere, {\n          material: GlassMaterial,\n          position: [-2.3, 0, 0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Sphere, {\n          material: GlassMaterial2,\n          position: [-0.75, 0, 0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Sphere, {\n          material: GlassMaterial3,\n          position: [0.8, 0, 0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Sphere, {\n          material: GlassMaterial4,\n          position: [2.3, 0, 0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Environment, {\n          preset: \"apartment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c2 = Sfera;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Sphere\");\n$RefreshReg$(_c2, \"Sfera\");","map":{"version":3,"sources":["/Users/riandasilva/vetreria/src/components/Sphere.js"],"names":["THREE","require","global","React","Suspense","useRef","useState","useEffect","Canvas","Environment","GlassMaterial","GlassMaterial2","GlassMaterial3","GlassMaterial4","Sphere","props","ref","hovered","hover","clicked","click","event","Sfera","height","background","fov"],"mappings":"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","sourcesContent":["const THREE = require(\"three\");\nglobal.THREE = THREE;\nimport React, { Suspense, useRef, useState, useEffect } from \"react\"\nimport { Canvas } from '@react-three/fiber'\nimport { Environment } from '@react-three/drei'\nimport {GlassMaterial, GlassMaterial2, GlassMaterial3, GlassMaterial4} from './Materials'\n\nfunction Sphere(props) {\n    const ref = useRef()\n  // Hold state for hovered and clicked events\n  const [hovered, hover] = useState(false)\n  const [clicked, click] = useState(false)\n  // Subscribe this component to the render-loop, rotate the mesh every frame\n  // Return the view, these are regular Threejs elements expressed in JSX\n  return (\n    <mesh\n      {...props}\n      ref={ref}\n      scale={clicked || hovered ? 1.2 : 1}\n      onClick={(event) => click(!clicked)}\n      onPointerOver={(event) => hover(true)}\n      onPointerOut={(event) => hover(false)}\n      >\n      <sphereGeometry args={[.5, 64]} />\n    </mesh>\n  )\n  }\n\nexport function Sfera() {\n    return (\n      <>\n      <Canvas style={{height:\"100px\", background:\"#fff\"}} pixelRatio={[1, 1.5]} concurrent camera={{ fov: 30 }}>\n      <Suspense fallback={null}>\n        <ambientLight intensity={0.5} />\n        <spotLight position={[10, 10, 10]} angle={0.15} penumbra={1} />\n        <pointLight position={[-10, -10, -10]} />\n        <Sphere material={GlassMaterial} position={[-2.3, 0, 0]} />\n        <Sphere material={GlassMaterial2} position={[-0.75, 0, 0]} />\n        <Sphere material={GlassMaterial3} position={[0.8, 0, 0]} />\n        <Sphere material={GlassMaterial4} position={[2.3, 0, 0]} />\n        <Environment preset=\"apartment\" />\n        </Suspense>\n     </Canvas>\n      </>\n    )\n  }"]},"metadata":{},"sourceType":"module"}