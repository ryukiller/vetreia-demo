{"ast":null,"code":"import _slicedToArray from \"/Users/riandasilva/vetreria/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport { useThree, useFrame, createPortal, useLoader } from '@react-three/fiber';\nimport { Scene, WebGLCubeRenderTarget, HalfFloatType, FloatType, EquirectangularReflectionMapping, CubeTextureLoader } from 'three';\nimport { RGBELoader } from 'three-stdlib';\nimport { presetsObj } from '../helpers/environment-assets.js';\nvar CUBEMAP_ROOT = 'https://market-assets.fra1.cdn.digitaloceanspaces.com/market-assets/hdris/';\n\nvar isRef = function isRef(obj) {\n  return obj.current && obj.current.isScene;\n};\n\nvar resolveScene = function resolveScene(scene) {\n  return isRef(scene) ? scene.current : scene;\n};\n\nfunction Environment(props) {\n  return props.map ? /*#__PURE__*/React.createElement(EnvironmentMap, props) : props.children ? /*#__PURE__*/React.createElement(EnvironmentPortal, props) : /*#__PURE__*/React.createElement(EnvironmentCube, props);\n}\n\nfunction EnvironmentMap(_ref) {\n  var scene = _ref.scene,\n      _ref$background = _ref.background,\n      background = _ref$background === void 0 ? false : _ref$background,\n      map = _ref.map;\n  var defaultScene = useThree(function (state) {\n    return state.scene;\n  });\n  React.useLayoutEffect(function () {\n    if (map) {\n      var target = resolveScene(scene || defaultScene);\n      var oldbg = target.background;\n      var oldenv = target.environment;\n      if (background !== 'only') target.environment = map;\n      if (background) target.background = map;\n      return function () {\n        if (background !== 'only') target.environment = oldenv;\n        if (background) target.background = oldbg;\n      };\n    }\n  }, [scene, map]);\n  return null;\n}\n\nfunction EnvironmentPortal(_ref2) {\n  var children = _ref2.children,\n      _ref2$near = _ref2.near,\n      near = _ref2$near === void 0 ? 1 : _ref2$near,\n      _ref2$far = _ref2.far,\n      far = _ref2$far === void 0 ? 1000 : _ref2$far,\n      _ref2$resolution = _ref2.resolution,\n      resolution = _ref2$resolution === void 0 ? 256 : _ref2$resolution,\n      _ref2$frames = _ref2.frames,\n      frames = _ref2$frames === void 0 ? 1 : _ref2$frames,\n      _ref2$background = _ref2.background,\n      background = _ref2$background === void 0 ? false : _ref2$background,\n      scene = _ref2.scene,\n      files = _ref2.files,\n      path = _ref2.path,\n      _ref2$preset = _ref2.preset,\n      preset = _ref2$preset === void 0 ? undefined : _ref2$preset,\n      extensions = _ref2.extensions;\n  var gl = useThree(function (state) {\n    return state.gl;\n  });\n  var defaultScene = useThree(function (state) {\n    return state.scene;\n  });\n  var camera = React.useRef(null);\n\n  var _React$useState = React.useState(function () {\n    return new Scene();\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 1),\n      virtualScene = _React$useState2[0];\n\n  var fbo = React.useMemo(function () {\n    var fbo = new WebGLCubeRenderTarget(resolution);\n    fbo.texture.type = HalfFloatType;\n    return fbo;\n  }, [resolution]);\n  React.useLayoutEffect(function () {\n    if (frames === 1) camera.current.update(gl, virtualScene);\n    var target = resolveScene(scene || defaultScene);\n    var oldbg = target.background;\n    var oldenv = target.environment;\n    if (background !== 'only') target.environment = fbo.texture;\n    if (background) target.background = fbo.texture;\n    return function () {\n      if (background !== 'only') target.environment = oldenv;\n      if (background) target.background = oldbg;\n    };\n  }, [children, scene]);\n  var count = 1;\n  useFrame(function () {\n    if (frames === Infinity || count < frames) {\n      camera.current.update(gl, virtualScene);\n      count++;\n    }\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, createPortal( /*#__PURE__*/React.createElement(React.Fragment, null, children, /*#__PURE__*/React.createElement(\"cubeCamera\", {\n    ref: camera,\n    args: [near, far, fbo]\n  }), (files || preset) && /*#__PURE__*/React.createElement(EnvironmentMap, {\n    background: true,\n    files: files,\n    preset: preset,\n    path: path,\n    extensions: extensions,\n    scene: virtualScene\n  })), virtualScene));\n}\n\nfunction EnvironmentCube(_ref3) {\n  var _ref3$background = _ref3.background,\n      background = _ref3$background === void 0 ? false : _ref3$background,\n      _ref3$files = _ref3.files,\n      files = _ref3$files === void 0 ? ['/px.png', '/nx.png', '/py.png', '/ny.png', '/pz.png', '/nz.png'] : _ref3$files,\n      _ref3$path = _ref3.path,\n      path = _ref3$path === void 0 ? '' : _ref3$path,\n      _ref3$preset = _ref3.preset,\n      preset = _ref3$preset === void 0 ? undefined : _ref3$preset,\n      scene = _ref3.scene,\n      extensions = _ref3.extensions;\n\n  if (preset) {\n    if (!(preset in presetsObj)) throw new Error('Preset must be one of: ' + Object.keys(presetsObj).join(', '));\n    files = presetsObj[preset];\n    path = CUBEMAP_ROOT;\n  }\n\n  var defaultScene = useThree(function (state) {\n    return state.scene;\n  });\n  var isCubeMap = Array.isArray(files);\n  var loader = isCubeMap ? CubeTextureLoader : RGBELoader; // @ts-expect-error\n\n  var loaderResult = useLoader(loader, isCubeMap ? [files] : files, function (loader) {\n    loader.setPath(path); // @ts-expect-error\n\n    loader.setDataType == null ? void 0 : loader.setDataType(FloatType);\n    if (extensions) extensions(loader);\n  });\n  var texture = isCubeMap ? loaderResult[0] : loaderResult;\n  texture.mapping = EquirectangularReflectionMapping;\n  React.useLayoutEffect(function () {\n    var target = resolveScene(scene || defaultScene);\n    var oldbg = target.background;\n    var oldenv = target.environment;\n    if (background !== 'only') target.environment = texture;\n    if (background) target.background = texture;\n    return function () {\n      if (background !== 'only') target.environment = oldenv;\n      if (background) target.background = oldbg; // Environment textures are volatile, better dispose and uncache them\n\n      texture.dispose();\n    };\n  }, [texture, background, scene]);\n  return null;\n}\n\nexport { Environment, EnvironmentCube, EnvironmentMap, EnvironmentPortal };","map":{"version":3,"sources":["/Users/riandasilva/vetreria/node_modules/@react-three/drei/core/Environment.js"],"names":["React","useThree","useFrame","createPortal","useLoader","Scene","WebGLCubeRenderTarget","HalfFloatType","FloatType","EquirectangularReflectionMapping","CubeTextureLoader","RGBELoader","presetsObj","CUBEMAP_ROOT","isRef","obj","current","isScene","resolveScene","scene","Environment","props","map","createElement","EnvironmentMap","children","EnvironmentPortal","EnvironmentCube","background","defaultScene","state","useLayoutEffect","target","oldbg","oldenv","environment","near","far","resolution","frames","files","path","preset","undefined","extensions","gl","camera","useRef","useState","virtualScene","fbo","useMemo","texture","type","update","count","Infinity","Fragment","ref","args","Error","Object","keys","join","isCubeMap","Array","isArray","loader","loaderResult","setPath","setDataType","mapping","dispose"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useThree, useFrame, createPortal, useLoader } from '@react-three/fiber';\nimport { Scene, WebGLCubeRenderTarget, HalfFloatType, FloatType, EquirectangularReflectionMapping, CubeTextureLoader } from 'three';\nimport { RGBELoader } from 'three-stdlib';\nimport { presetsObj } from '../helpers/environment-assets.js';\n\nconst CUBEMAP_ROOT = 'https://market-assets.fra1.cdn.digitaloceanspaces.com/market-assets/hdris/';\n\nconst isRef = obj => obj.current && obj.current.isScene;\n\nconst resolveScene = scene => isRef(scene) ? scene.current : scene;\n\nfunction Environment(props) {\n  return props.map ? /*#__PURE__*/React.createElement(EnvironmentMap, props) : props.children ? /*#__PURE__*/React.createElement(EnvironmentPortal, props) : /*#__PURE__*/React.createElement(EnvironmentCube, props);\n}\nfunction EnvironmentMap({\n  scene,\n  background = false,\n  map\n}) {\n  const defaultScene = useThree(state => state.scene);\n  React.useLayoutEffect(() => {\n    if (map) {\n      const target = resolveScene(scene || defaultScene);\n      const oldbg = target.background;\n      const oldenv = target.environment;\n      if (background !== 'only') target.environment = map;\n      if (background) target.background = map;\n      return () => {\n        if (background !== 'only') target.environment = oldenv;\n        if (background) target.background = oldbg;\n      };\n    }\n  }, [scene, map]);\n  return null;\n}\nfunction EnvironmentPortal({\n  children,\n  near = 1,\n  far = 1000,\n  resolution = 256,\n  frames = 1,\n  background = false,\n  scene,\n  files,\n  path,\n  preset = undefined,\n  extensions\n}) {\n  const gl = useThree(state => state.gl);\n  const defaultScene = useThree(state => state.scene);\n  const camera = React.useRef(null);\n  const [virtualScene] = React.useState(() => new Scene());\n  const fbo = React.useMemo(() => {\n    const fbo = new WebGLCubeRenderTarget(resolution);\n    fbo.texture.type = HalfFloatType;\n    return fbo;\n  }, [resolution]);\n  React.useLayoutEffect(() => {\n    if (frames === 1) camera.current.update(gl, virtualScene);\n    const target = resolveScene(scene || defaultScene);\n    const oldbg = target.background;\n    const oldenv = target.environment;\n    if (background !== 'only') target.environment = fbo.texture;\n    if (background) target.background = fbo.texture;\n    return () => {\n      if (background !== 'only') target.environment = oldenv;\n      if (background) target.background = oldbg;\n    };\n  }, [children, scene]);\n  let count = 1;\n  useFrame(() => {\n    if (frames === Infinity || count < frames) {\n      camera.current.update(gl, virtualScene);\n      count++;\n    }\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, createPortal( /*#__PURE__*/React.createElement(React.Fragment, null, children, /*#__PURE__*/React.createElement(\"cubeCamera\", {\n    ref: camera,\n    args: [near, far, fbo]\n  }), (files || preset) && /*#__PURE__*/React.createElement(EnvironmentMap, {\n    background: true,\n    files: files,\n    preset: preset,\n    path: path,\n    extensions: extensions,\n    scene: virtualScene\n  })), virtualScene));\n}\nfunction EnvironmentCube({\n  background = false,\n  files = ['/px.png', '/nx.png', '/py.png', '/ny.png', '/pz.png', '/nz.png'],\n  path = '',\n  preset = undefined,\n  scene,\n  extensions\n}) {\n  if (preset) {\n    if (!(preset in presetsObj)) throw new Error('Preset must be one of: ' + Object.keys(presetsObj).join(', '));\n    files = presetsObj[preset];\n    path = CUBEMAP_ROOT;\n  }\n\n  const defaultScene = useThree(state => state.scene);\n  const isCubeMap = Array.isArray(files);\n  const loader = isCubeMap ? CubeTextureLoader : RGBELoader; // @ts-expect-error\n\n  const loaderResult = useLoader(loader, isCubeMap ? [files] : files, loader => {\n    loader.setPath(path); // @ts-expect-error\n\n    loader.setDataType == null ? void 0 : loader.setDataType(FloatType);\n    if (extensions) extensions(loader);\n  });\n  const texture = isCubeMap ? loaderResult[0] : loaderResult;\n  texture.mapping = EquirectangularReflectionMapping;\n  React.useLayoutEffect(() => {\n    const target = resolveScene(scene || defaultScene);\n    const oldbg = target.background;\n    const oldenv = target.environment;\n    if (background !== 'only') target.environment = texture;\n    if (background) target.background = texture;\n    return () => {\n      if (background !== 'only') target.environment = oldenv;\n      if (background) target.background = oldbg; // Environment textures are volatile, better dispose and uncache them\n\n      texture.dispose();\n    };\n  }, [texture, background, scene]);\n  return null;\n}\n\nexport { Environment, EnvironmentCube, EnvironmentMap, EnvironmentPortal };\n"]},"metadata":{},"sourceType":"module"}