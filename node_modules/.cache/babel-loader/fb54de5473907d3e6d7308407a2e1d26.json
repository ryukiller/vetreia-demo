{"ast":null,"code":"import _slicedToArray from \"/Users/riandasilva/vetreria/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/riandasilva/vetreria/src/components/modelli/Model001.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Box, Plane, useTexture, useFrame } from \"@react-three/drei\";\nimport { GlassMaterial } from '../../components/Materials';\nimport React, { useState } from \"react\";\n\nvar Model001 = function Model001(_ref) {\n  _s();\n\n  var dimensions = _ref.dimensions,\n      _ref$isOpen = _ref.isOpen,\n      isOpen = _ref$isOpen === void 0 ? false : _ref$isOpen;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      rotation = _useState2[0],\n      setRotation = _useState2[1];\n\n  useFrame(function (_ref2) {\n    var clock = _ref2.clock;\n\n    if (isOpen) {\n      var targetRotation = -Math.PI / 2;\n\n      if (rotation > targetRotation) {\n        setRotation(rotation - 0.01);\n      }\n    } else {\n      if (rotation < 0) {\n        setRotation(rotation + 0.01);\n      }\n    }\n  });\n  var floorTexture = useTexture(\"./floor.jpg\");\n  var wallTexture = useTexture(\"./concrete_polished_matte_basecolor.png\");\n\n  var _dimensions = _slicedToArray(dimensions, 3),\n      width = _dimensions[0],\n      height = _dimensions[1],\n      depth = _dimensions[2];\n\n  var doorWidth = 0.6 + width;\n  var doorPositionX = (doorWidth - 0.6) / 2;\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    dispose: null,\n    children: [/*#__PURE__*/_jsxDEV(\"group\", {\n      position: [-1.46, 0.01, -0.97],\n      rotation: [0, rotation, 0],\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        args: [doorWidth, 2, 0.008],\n        position: [doorPositionX, 1, 0],\n        material: GlassMaterial,\n        receiveShadow: true,\n        castShadow: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Box, {\n        args: [0.03, 0.03, 0.06],\n        position: [doorWidth - 0.8 / 2, 1, 0.005],\n        receiveShadow: true,\n        castShadow: true,\n        children: /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n          attach: \"material\",\n          color: \"gold\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Box, {\n        args: [0.08, 0.08, 0.03],\n        position: [-0.28, 1.8, 0.005],\n        receiveShadow: true,\n        castShadow: true,\n        children: /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n          attach: \"material\",\n          color: \"silver\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Box, {\n        args: [0.08, 0.08, 0.03],\n        position: [-0.28, 0.2, 0.005],\n        receiveShadow: true,\n        castShadow: true,\n        children: /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n          attach: \"material\",\n          color: \"silver\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Box, {\n      position: [doorWidth - 3.34 / 2, 1.2, -1.5],\n      args: [0.15, 4, 1.2],\n      children: /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n        attach: \"material\",\n        color: \"#fff\",\n        map: wallTexture,\n        roughnessMap: wallTexture,\n        metalnessMap: wallTexture,\n        roughness: 0.4,\n        metalness: 0.6\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Box, {\n      position: [-1.9, 1.2, -1],\n      args: [0.2, 4, 0.2],\n      children: /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n        attach: \"material\",\n        color: \"#fff\",\n        map: wallTexture,\n        roughnessMap: wallTexture,\n        metalnessMap: wallTexture,\n        roughness: 0.4,\n        metalness: 0.6\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Plane, {\n      position: [-2, 1, 0],\n      args: [16, 16],\n      rotation: [0, Math.PI / 2, 0],\n      receiveShadow: true,\n      children: /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n        attach: \"material\",\n        color: \"#fff\",\n        map: wallTexture,\n        roughnessMap: wallTexture,\n        metalnessMap: wallTexture,\n        roughness: 0.4,\n        metalness: 0.6\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Plane, {\n      position: [0, 1, -2],\n      args: [16, 16],\n      rotation: [0, 0, -Math.PI / 2],\n      receiveShadow: true,\n      children: /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n        attach: \"material\",\n        color: \"#fff\",\n        map: wallTexture,\n        roughnessMap: wallTexture,\n        metalnessMap: wallTexture,\n        roughness: 0.4,\n        metalness: 0.6\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Plane, {\n      args: [20, 20],\n      rotation: [-Math.PI / 2, 0, 0],\n      receiveShadow: true,\n      children: /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n        attach: \"material\",\n        color: \"#fff\",\n        map: floorTexture,\n        roughnessMap: wallTexture,\n        metalnessMap: wallTexture,\n        roughness: 0.4,\n        metalness: 0.6\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Model001, \"e4px7r1eKtkb1agbLMGrUDv2xLI=\", false, function () {\n  return [useFrame, useTexture, useTexture];\n});\n\n_c = Model001;\nexport default Model001;\n\nvar _c;\n\n$RefreshReg$(_c, \"Model001\");","map":{"version":3,"sources":["/Users/riandasilva/vetreria/src/components/modelli/Model001.js"],"names":["Box","Plane","useTexture","useFrame","GlassMaterial","React","useState","Model001","dimensions","isOpen","rotation","setRotation","clock","targetRotation","Math","PI","floorTexture","wallTexture","width","height","depth","doorWidth","doorPositionX"],"mappings":"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","sourcesContent":["import { Box, Plane, useTexture, useFrame } from \"@react-three/drei\";\nimport {GlassMaterial} from '../../components/Materials'\nimport React, { useState } from \"react\"\n\nconst Model001 = ({ dimensions, isOpen = false }) => {\n  const [rotation, setRotation] = useState(0);\n\n  useFrame(({ clock }) => {\n    if (isOpen) {\n      const targetRotation = -Math.PI / 2;\n      if (rotation > targetRotation) {\n        setRotation(rotation - 0.01);\n      }\n    } else {\n      if (rotation < 0) {\n        setRotation(rotation + 0.01);\n      }\n    }\n  });\n\n  const floorTexture = useTexture(\"./floor.jpg\");\n  const wallTexture = useTexture(\"./concrete_polished_matte_basecolor.png\");\n\n  const [width, height, depth] = dimensions;\n\n  const doorWidth = 0.6 + width;\n  const doorPositionX = (doorWidth - 0.6) / 2;\n\n  return (\n    <group dispose={null}>\n      <group position={[-1.46, 0.01, -0.97]} rotation={[0, rotation, 0]}>\n        {/* Glass Door */}\n        <Box\n          args={[doorWidth, 2, 0.008]}\n          position={[doorPositionX, 1, 0]}\n          material={GlassMaterial}\n          receiveShadow\n          castShadow\n          />\n          \n\n        {/* Pomello */}\n        <Box\n          args={[0.03, 0.03, 0.06]}\n          position={[doorWidth - 0.8 / 2, 1, 0.005]}\n          receiveShadow\n          castShadow\n        >\n          <meshStandardMaterial attach=\"material\" color=\"gold\" />\n        </Box>\n\n        {/* Hinges */}\n        <Box\n          args={[0.08, 0.08, 0.03]}\n          position={[-0.28, 1.8, 0.005]}\n          receiveShadow\n          castShadow\n        >\n          <meshStandardMaterial attach=\"material\" color=\"silver\" />\n        </Box>\n        <Box\n          args={[0.08, 0.08, 0.03]}\n          position={[-0.28, 0.2, 0.005]}\n          receiveShadow\n          castShadow\n        >\n          <meshStandardMaterial attach=\"material\" color=\"silver\" />\n        </Box>\n      </group>\n\n      {/* collone right */}\n      <Box position={[doorWidth - 3.34 / 2, 1.2, -1.5]} args={[0.15, 4, 1.2]} >\n      <meshStandardMaterial\n          attach=\"material\"\n          color=\"#fff\"\n          map={wallTexture}\n          roughnessMap={wallTexture}\n          metalnessMap={wallTexture}\n          roughness={0.4}\n          metalness={0.6}\n        />\n      </Box>\n\n      {/* collone left */}\n      <Box position={[-1.9, 1.2, -1]} args={[0.2, 4, 0.2]} >\n      <meshStandardMaterial\n          attach=\"material\"\n          color=\"#fff\"\n          map={wallTexture}\n          roughnessMap={wallTexture}\n          metalnessMap={wallTexture}\n          roughness={0.4}\n          metalness={0.6}\n        />\n      </Box>\n\n      {/* left wall */}\n      <Plane\n        position={[-2, 1, 0]}\n        args={[16, 16]}\n        rotation={[0, Math.PI / 2, 0]}\n        receiveShadow\n      >\n        <meshStandardMaterial\n          attach=\"material\"\n          color=\"#fff\"\n          map={wallTexture}\n          roughnessMap={wallTexture}\n          metalnessMap={wallTexture}\n          roughness={0.4}\n          metalness={0.6}\n        />\n      </Plane>\n\n      {/* Right wall */}\n      <Plane\n        position={[0, 1, -2]}\n        args={[16, 16]}\n        rotation={[0, 0, -Math.PI / 2]}\n        receiveShadow\n      >\n        <meshStandardMaterial\n          attach=\"material\"\n          color=\"#fff\"\n          map={wallTexture}\n          roughnessMap={wallTexture}\n          metalnessMap={wallTexture}\n          roughness={0.4}\n          metalness={0.6}\n        />\n      </Plane>\n\n      {/* Floor Plane */}\n      <Plane args={[20, 20]} rotation={[-Math.PI / 2, 0, 0]} receiveShadow>\n        <meshStandardMaterial\n          attach=\"material\"\n          color=\"#fff\"\n          map={floorTexture}\n          roughnessMap={wallTexture}\n          metalnessMap={wallTexture}\n          roughness={0.4}\n          metalness={0.6}\n        />\n      </Plane>\n    </group>\n  );\n};\n\nexport default Model001;\n"]},"metadata":{},"sourceType":"module"}