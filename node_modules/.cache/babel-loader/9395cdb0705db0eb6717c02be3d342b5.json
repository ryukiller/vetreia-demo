{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/riandasilva/vetreria/src/components/VetreriaBox.js\",\n    _s = $RefreshSig$();\n\nvar THREE = require(\"three\");\n\nglobal.THREE = THREE;\nimport React, { Suspense, useRef, useState, useEffect } from \"react\";\nimport { Canvas, useFrame } from '@react-three/fiber';\nimport { ContactShadows, Environment, useGLTF, OrbitControls } from '@react-three/drei';\nimport { proxy, useProxy } from \"valtio\";\nimport { State } from \"./State\";\nimport { GlassMaterial } from './Materials';\nimport Model001 from './modelli/Model001';\n\nfunction Vetreria(_ref) {\n  _s();\n\n  var x = _ref.x,\n      y = _ref.y,\n      z = _ref.z,\n      x2 = _ref.x2;\n  var panelm = useRef();\n  var doorm = useRef();\n  var cerniere = useRef();\n  var frame = useRef();\n  var pomello = useRef();\n  var walldoor = useRef();\n  var pomelloin = useRef();\n\n  var _useGLTF = useGLTF(\"br2.gltf\"),\n      nodes = _useGLTF.nodes,\n      materials = _useGLTF.materials;\n\n  var offset = x - 1;\n  var vec = new THREE.Vector3(x, y, z);\n  var vec2 = new THREE.Vector3(x, y, x2);\n  var vec3 = new THREE.Vector3(x * 1.35, -0.01, x2 * 0.97);\n  var vec4 = new THREE.Vector3(x, y, z);\n  var panelmP = new THREE.Vector3(x * 1.35, -0.01, 0.97);\n  var pomelloP = new THREE.Vector3(1.35 * x, -0.01, 0.97); //  -(x1 * offset) - (size*scale)/2) -(size/2)\n\n  var frameS = new THREE.Vector3(x * 1.35, -0.01, 0.97);\n  var cerniereP = new THREE.Vector3(1.35, y * -0.01, 0.97);\n  var vecM = new THREE.Vector3(1, 1, 1);\n  var radian = 2 * Math.PI * (180 / 360);\n  useFrame(function () {\n    //scaleY(panelm.current, y)\n    panelm.current.scale.lerp(vec, 0.1);\n    panelm.current.position.lerp(panelmP, 0.1);\n    doorm.current.scale.lerp(vec, 0.1);\n    walldoor.current.scale.lerp(vec, 0.1);\n    frame.current.scale.lerp(vec, 0.1);\n    frame.current.position.lerp(frameS, 0.1);\n    pomello.current.position.lerp(pomelloP, 0.1);\n    pomello.current.scale.lerp(vec, 0.1);\n    cerniere.current.position.lerp(cerniereP, 0.1);\n    panelm.current.scale.lerp(vec2, 0.1);\n    panelm.current.position.lerp(vec3, 0.1);\n  });\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    dispose: null,\n    children: [/*#__PURE__*/_jsxDEV(\"group\", {\n      position: [-1.35, 0.01, -0.97],\n      children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n        ref: doorm,\n        geometry: nodes.doorm.geometry,\n        material: GlassMaterial\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n        ref: cerniere,\n        geometry: nodes.cerniere.geometry,\n        material: nodes.cerniere.material,\n        position: [1.35, -0.01, 0.97]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n        ref: frame,\n        geometry: nodes.frame.geometry,\n        material: nodes.frame.material,\n        position: [1.35, -0.01, 0.97]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n        ref: panelm,\n        geometry: nodes.panelm.geometry,\n        material: GlassMaterial,\n        position: [1.35, -0.01, 0.97]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"group\", {\n        ref: pomello,\n        position: [1.35, -0.01, 0.97],\n        children: /*#__PURE__*/_jsxDEV(\"mesh\", {\n          ref: pomelloin,\n          geometry: nodes.pomello.geometry,\n          material: nodes.pomello.material,\n          scale: [1, 1, 1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n        ref: walldoor,\n        geometry: nodes.walldoor.geometry,\n        material: materials['Material.001']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      geometry: nodes.wall.geometry,\n      material: materials.walls,\n      scale: [1.88, 1.29, 1.88]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      geometry: nodes.floor.geometry,\n      material: materials.floor,\n      scale: [1.88, 1.29, 1.88]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Vetreria, \"bjYU70rDX9BO3MGu6qxymMBhXas=\", false, function () {\n  return [useGLTF, useFrame];\n});\n\n_c = Vetreria;\nexport default function VetreriaBox(_ref2) {\n  var x = _ref2.x,\n      y = _ref2.y,\n      z = _ref2.z,\n      x2 = _ref2.x2,\n      isOpen = _ref2.isOpen;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Canvas, {\n      concurrent: true,\n      pixelRatio: [1, 1.5],\n      camera: {\n        position: [1.5, 1.5, 3.95],\n        fov: 30\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {\n        intensity: 0.3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"spotLight\", {\n        intensity: 0.3,\n        angle: 0.1,\n        penumbra: 1,\n        position: [5, 25, 20]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n        fallback: null,\n        children: [/*#__PURE__*/_jsxDEV(Model001, {\n          dimensions: [x, y, z],\n          isOpen: isOpen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Environment, {\n          preset: \"studio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ContactShadows, {\n          \"rotation-x\": Math.PI / 2,\n          position: [0, -0.8, 0],\n          opacity: 0.25,\n          width: 10,\n          height: 10,\n          blur: 2,\n          far: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(OrbitControls, {\n        minDistance: .5,\n        maxDistance: 5,\n        minAzimuthAngle: 0.1,\n        maxAzimuthAngle: Math.PI / 2 - 0.05,\n        maxPolarAngle: Math.PI / 2 - 0.05,\n        minPolarAngle: 0.98,\n        target: [-0.5, 1.45, 0],\n        enableZoom: true,\n        enablePan: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_c2 = VetreriaBox;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Vetreria\");\n$RefreshReg$(_c2, \"VetreriaBox\");","map":{"version":3,"sources":["/Users/riandasilva/vetreria/src/components/VetreriaBox.js"],"names":["THREE","require","global","React","Suspense","useRef","useState","useEffect","Canvas","useFrame","ContactShadows","Environment","useGLTF","OrbitControls","proxy","useProxy","State","GlassMaterial","Model001","Vetreria","x","y","z","x2","panelm","doorm","cerniere","frame","pomello","walldoor","pomelloin","nodes","materials","offset","vec","Vector3","vec2","vec3","vec4","panelmP","pomelloP","frameS","cerniereP","vecM","radian","Math","PI","current","scale","lerp","position","geometry","material","wall","walls","floor","VetreriaBox","isOpen","fov"],"mappings":"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","sourcesContent":["const THREE = require(\"three\");\nglobal.THREE = THREE;\nimport React, { Suspense, useRef, useState, useEffect } from \"react\"\nimport { Canvas, useFrame } from '@react-three/fiber'\nimport { ContactShadows, Environment, useGLTF, OrbitControls } from '@react-three/drei'\nimport { proxy, useProxy } from \"valtio\"\nimport {State} from \"./State\"\nimport {GlassMaterial} from './Materials'\n\nimport Model001 from './modelli/Model001'\n\n\n\nfunction Vetreria({ x, y, z, x2 }) {\n\nconst panelm = useRef()\nconst doorm = useRef()\nconst cerniere = useRef()\nconst frame = useRef()\nconst pomello = useRef()\nconst walldoor = useRef()\nconst pomelloin = useRef()\n\nconst { nodes, materials } = useGLTF(\"br2.gltf\")\n\nconst offset = x - 1;\n\nconst vec = new THREE.Vector3(x, y, z);\n\nconst vec2 = new THREE.Vector3(x, y, x2);\n\nconst vec3 = new THREE.Vector3(x * 1.35, -0.01, x2 * 0.97);\n\nconst vec4 = new THREE.Vector3(x, y, z);\n\nconst panelmP = new THREE.Vector3(x * 1.35, -0.01, 0.97);\n\nconst pomelloP = new THREE.Vector3((1.35 * x) , -0.01, 0.97); //  -(x1 * offset) - (size*scale)/2) -(size/2)\n\nconst frameS = new THREE.Vector3(x * 1.35, -0.01, 0.97);\n\nconst cerniereP = new THREE.Vector3(1.35, y * -0.01, 0.97);\n\nconst vecM = new THREE.Vector3(1, 1, 1);\n\nlet radian = 2 * Math.PI * (180 / 360);\n\n\nuseFrame(() => {\n\n  //scaleY(panelm.current, y)\n  \n  panelm.current.scale.lerp(vec, 0.1)\n  panelm.current.position.lerp(panelmP, 0.1)\n\n  doorm.current.scale.lerp(vec, 0.1)\n  walldoor.current.scale.lerp(vec, 0.1)\n  frame.current.scale.lerp(vec, 0.1)\n  frame.current.position.lerp(frameS, 0.1)\n  \n  pomello.current.position.lerp(pomelloP, 0.1)\n  pomello.current.scale.lerp(vec, 0.1)\n  cerniere.current.position.lerp(cerniereP, 0.1)\n\n  panelm.current.scale.lerp(vec2, 0.1)\n  panelm.current.position.lerp(vec3, 0.1)\n\n  \n\n  \n  \n\n})\n\n     \nreturn (\n  <group\n    dispose={null} >\n      <group position={[-1.35, 0.01, -0.97]}>\n      <mesh ref={doorm} geometry={nodes.doorm.geometry} material={GlassMaterial}  />\n      \n      <mesh ref={cerniere} geometry={nodes.cerniere.geometry} material={nodes.cerniere.material} position={[1.35, -0.01, 0.97]} />\n      <mesh ref={frame} geometry={nodes.frame.geometry} material={nodes.frame.material} position={[1.35, -0.01, 0.97]} />\n      \n      <mesh ref={panelm} geometry={nodes.panelm.geometry} material={GlassMaterial} position={[1.35, -0.01, 0.97]} />\n      \n\n      <group ref={pomello} position={[1.35, -0.01, 0.97]}>\n        <mesh ref={pomelloin} geometry={nodes.pomello.geometry} material={nodes.pomello.material} scale={[1,1,1]} />\n      </group>\n      <mesh ref={walldoor} geometry={nodes.walldoor.geometry} material={materials['Material.001']} />\n    </group>\n    <mesh geometry={nodes.wall.geometry} material={materials.walls} scale={[1.88, 1.29, 1.88]} />\n    <mesh geometry={nodes.floor.geometry} material={materials.floor} scale={[1.88, 1.29, 1.88]} />\n  </group>\n)\n}\n\nexport default function VetreriaBox({ x, y, z, x2, isOpen }) {\nreturn (\n  <>\n    <Canvas concurrent pixelRatio={[1, 1.5]} camera={{ position: [1.5, 1.5, 3.95], fov:30 }}>\n      <ambientLight intensity={0.3} />\n      <spotLight intensity={0.3} angle={0.1} penumbra={1} position={[5, 25, 20]} />\n      <Suspense fallback={null}>\n        {/* <Vetreria x={x} y={y} z={z} x2={x2}  /> */}\n        <Model001 dimensions={[x, y, z]} isOpen={isOpen} />\n        <Environment preset=\"studio\" />\n        <ContactShadows rotation-x={Math.PI / 2} position={[0, -0.8, 0]} opacity={0.25} width={10} height={10} blur={2} far={1} />\n      </Suspense>\n      <OrbitControls minDistance={.5} maxDistance={5} minAzimuthAngle={0.1} maxAzimuthAngle={Math.PI / 2-0.05} maxPolarAngle={Math.PI / 2-0.05} minPolarAngle={0.98}  target={[-0.5,1.45,0]}  enableZoom={true} enablePan={true} />\n    </Canvas>\n  </>\n)\n}"]},"metadata":{},"sourceType":"module"}